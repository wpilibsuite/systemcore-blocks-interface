// This file was generated. Do not edit!

import * as pythonEnum from "../mrc_get_python_enum_value";
import * as toolboxItems from "../../toolbox/items";

// Blocks for module wpilib.shuffleboard

export function initialize() {
  pythonEnum.initializeEnum("wpilib.shuffleboard.BuiltInLayouts", ["kGrid", "kList"], "The types of layouts bundled with Shuffleboard.\n\n<pre>{@code\nShuffleboardLayout myList = Shuffleboard::GetTab(\"My Tab\")\n.GetLayout(BuiltinLayouts::kList, \"My List\");\n}</pre>\n\nMembers:\n\n  kList : Groups components in a vertical list. New widgets added to the layout will\nbe placed at the bottom of the list. \nCustom properties: <table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Label position</td><td>String</td><td>\"BOTTOM\"</td>\n<td>The position of component labels inside the grid. One of\n``[\"TOP\", \"LEFT\", \"BOTTOM\", \"RIGHT\", \"HIDDEN\"``</td></tr>\n</table>\n\n  kGrid : Groups components in an *n* x *m* grid. Grid layouts default to\n3x3. \nCustom properties: <table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Number of columns</td><td>Number</td><td>3</td><td>Must be in the\nrange [1,15]</td>\n</tr>\n<tr><td>Number of rows</td><td>Number</td><td>3</td><td>Must be in the\nrange [1,15]</td></tr> <tr> <td>Label position</td> <td>String</td>\n<td>\"BOTTOM\"</td>\n<td>The position of component labels inside the grid.\nOne of ``[\"TOP\", \"LEFT\", \"BOTTOM\", \"RIGHT\", \"HIDDEN\"``</td>\n</tr>\n</table>");
  pythonEnum.initializeEnum("wpilib.shuffleboard.BuiltInWidgets", ["k3AxisAccelerometer", "kAccelerometer", "kBooleanBox", "kCameraStream", "kComboBoxChooser", "kCommand", "kDial", "kDifferentialDrive", "kEncoder", "kField", "kGraph", "kGyro", "kMecanumDrive", "kMotorController", "kNumberBar", "kNumberSlider", "kPIDCommand", "kPIDController", "kPowerDistribution", "kRelay", "kSplitButtonChooser", "kTextView", "kToggleButton", "kToggleSwitch", "kVoltageView"], "The types of the widgets bundled with Shuffleboard.\n\nFor example, setting a number to be displayed with a slider:\n<pre>{@code\nNetworkTableEntry example = Shuffleboard.getTab(\"My Tab\")\n.add(\"My Number\", 0)\n.withWidget(BuiltInWidgets.kNumberSlider)\n.getEntry();\n}</pre>\n\nEach value in this enum goes into detail on what data types that widget\ncan support, as well as the custom properties that widget uses.\n\nMembers:\n\n  kTextView : Displays a value with a simple text field.\nSupported types:\n\n- String\n- Number\n- Boolean\n\nThis widget has no custom properties.\n\n  kNumberSlider : Displays a number with a controllable slider.\nSupported types:\n\n- Number\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Min</td><td>Number</td><td>-1.0</td><td>The minimum value of the\nslider</td></tr> <tr><td>Max</td><td>Number</td><td>1.0</td><td>The maximum\nvalue of the slider</td></tr> <tr><td>Block\nincrement</td><td>Number</td><td>0.0625</td> <td>How much to move the\nslider by with the arrow keys</td></tr>\n</table>\n\n  kNumberBar : Displays a number with a view-only bar.\nSupported types:\n\n- Number\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Min</td><td>Number</td><td>-1.0</td><td>The minimum value of the\nbar</td></tr> <tr><td>Max</td><td>Number</td><td>1.0</td><td>The maximum\nvalue of the bar</td></tr>\n<tr><td>Center</td><td>Number</td><td>0</td><td>The center (\"zero\") value\nof the bar</td></tr>\n</table>\n\n  kDial : Displays a number with a view-only dial. Displayed values are rounded to\nthe nearest integer. \nSupported types:  - Number\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Min</td><td>Number</td><td>0</td><td>The minimum value of the\ndial</td></tr> <tr><td>Max</td><td>Number</td><td>100</td><td>The maximum\nvalue of the dial</td></tr> <tr><td>Show\nvalue</td><td>Boolean</td><td>true</td> <td>Whether or not to show the\nvalue as text</td></tr>\n</table>\n\n  kGraph : Displays a number with a graph. **NOTE:** graphs can be taxing\non the computer running the dashboard. Keep the number of visible data\npoints to a minimum. Making the widget smaller also helps with performance,\nbut may cause the graph to become difficult to read. \nSupported types:\n\n- Number\n- Number array\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Visible time</td><td>Number</td><td>30</td>\n<td>How long, in seconds, should past data be visible for</td></tr>\n</table>\n\n  kBooleanBox : Displays a boolean value as a large colored box.\nSupported types:\n\n- Boolean\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Color when true</td><td>Color</td><td>\"green\"</td>\n<td>Can be specified as a string (``\"#00FF00\"``) or a rgba integer\n(``0x00FF0000``)\n</td></tr>\n<tr><td>Color when false</td><td>Color</td><td>\"red\"</td>\n<td>Can be specified as a string or a number</td></tr>\n</table>\n\n  kToggleButton : Displays a boolean with a large interactive toggle button.\nSupported types:\n\n- Boolean\n\nThis widget has no custom properties.\n\n  kToggleSwitch : Displays a boolean with a fixed-size toggle switch.\nSupported types:\n\n- Boolean\n\nThis widget has no custom properties.\n\n  kVoltageView : Displays an analog input or a raw number with a number bar.\nSupported types:\n\n- Number\n- AnalogInput\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Min</td><td>Number</td><td>0</td><td>The minimum value of the\nbar</td></tr> <tr><td>Max</td><td>Number</td><td>5</td><td>The maximum\nvalue of the bar</td></tr>\n<tr><td>Center</td><td>Number</td><td>0</td><td>The center (\"zero\") value\nof the bar</td></tr>\n<tr><td>Orientation</td><td>String</td><td>\"HORIZONTAL\"</td>\n<td>The orientation of the bar. One of {@code [\"HORIZONTAL\",\n\"VERTICAL\"]}</td></tr> <tr><td>Number of tick\nmarks</td><td>Number</td><td>5</td> <td>The number of discrete ticks on the\nbar</td></tr>\n</table>\n\n  kPowerDistribution : Displays a PowerDistribution. \nSupported types:  -\nPowerDistribution\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Show voltage and current values</td><td>Boolean</td><td>true</td>\n<td>Whether or not to display the voltage and current draw</td></tr>\n</table>\n\n  kComboBoxChooser : Displays a SendableChooser with a dropdown combo box with a list of\noptions.\nSupported types:\n\n- SendableChooser\n\nThis widget has no custom properties.\n\n  kSplitButtonChooser : Displays a SendableChooserwith a toggle button for each available option.\nSupported types:\n\n- SendableChooser\n\nThis widget has no custom properties.\n\n  kEncoder : Displays an Encoder displaying its speed,\ntotal traveled distance, and its distance per tick. \nSupported types:\n\n- Encoder\n\nThis widget has no custom properties.\n\n  kMotorController : Displays a MotorController.\nThe motor controller will be controllable from the dashboard when test mode\nis enabled, but will otherwise be view-only. \nSupported types:\n- PWMMotorController\n- DMC60\n- Jaguar\n- PWMTalonSRX\n- PWMVictorSPX\n- SD540\n- Spark\n- Talon\n- Victor\n- VictorSP\n- MotorControllerGroup\n- Any custom subclass of ``SpeedContorller``\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Orientation</td><td>String</td><td>\"HORIZONTAL\"</td>\n<td>One of ``[\"HORIZONTAL\", \"VERTICAL\"]``</td></tr>\n</table>\n\n  kCommand : Displays a command with a toggle button. Pressing the button will start the\ncommand, and the button will automatically release when the command\ncompletes. \nSupported types:  - Command - CommandGroup\n- Any custom subclass of ``Command`` or ``CommandGroup``\n\nThis widget has no custom properties.\n\n  kPIDCommand : Displays a PID command with a checkbox and an editor for the PIDF\nconstants. Selecting the checkbox will start the command, and the checkbox\nwill automatically deselect when the command completes. \nSupported\ntypes:  - PIDCommand\n- Any custom subclass of ``PIDCommand``\n\nThis widget has no custom properties.\n\n  kPIDController : Displays a PID controller with an editor for the PIDF constants and a\ntoggle switch for enabling and disabling the controller. \nSupported\ntypes:  - PIDController\n\nThis widget has no custom properties.\n\n  kAccelerometer : Displays an accelerometer with a number bar displaying the magnitude of the\nacceleration and text displaying the exact value. \nSupported types:\n- AnalogAccelerometer\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Min</td><td>Number</td><td>-1</td>\n<td>The minimum acceleration value to display</td></tr>\n<tr><td>Max</td><td>Number</td><td>1</td>\n<td>The maximum acceleration value to display</td></tr>\n<tr><td>Show text</td><td>Boolean</td><td>true</td>\n<td>Show or hide the acceleration values</td></tr>\n<tr><td>Precision</td><td>Number</td><td>2</td>\n<td>How many numbers to display after the decimal point</td></tr>\n<tr><td>Show tick marks</td><td>Boolean</td><td>false</td>\n<td>Show or hide the tick marks on the number bars</td></tr>\n</table>\n\n  k3AxisAccelerometer : Displays a 3-axis accelerometer with a number bar for each axis'\nacceleration. \nSupported types:  - ADXL345_I2C -\nADXL345_SPI - ADXL362\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Range</td><td>Range</td><td>k16G</td><td>The accelerometer\nrange</td></tr> <tr><td>Show value</td><td>Boolean</td><td>true</td>\n<td>Show or hide the acceleration values</td></tr>\n<tr><td>Precision</td><td>Number</td><td>2</td>\n<td>How many numbers to display after the decimal point</td></tr>\n<tr><td>Show tick marks</td><td>Boolean</td><td>false</td>\n<td>Show or hide the tick marks on the number bars</td></tr>\n</table>\n\n  kGyro : Displays a gyro with a dial from 0 to 360 degrees.\nSupported types:\n\n- ADXRS450_Gyro\n- AnalogGyro\n- Any custom subclass of ``GyroBase`` (such as a MXP gyro)\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Major tick\nspacing</td><td>Number</td><td>45</td><td>Degrees</td></tr>\n<tr><td>Starting angle</td><td>Number</td><td>180</td>\n<td>How far to rotate the entire dial, in degrees</td></tr>\n<tr><td>Show tick mark ring</td><td>Boolean</td><td>true</td></tr>\n</table>\n\n  kRelay : Displays a relay with toggle buttons for each supported mode (off, on,\nforward, reverse). \nSupported types:  - Relay\n\nThis widget has no custom properties.\n\n  kDifferentialDrive : Displays a differential drive with a widget that displays the speed of each\nside of the drivebase and a vector for the direction and rotation of the\ndrivebase. The widget will be controllable if the robot is in test mode.\nSupported types:\n\n- DifferentialDrive\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Number of wheels</td><td>Number</td><td>4</td><td>Must be a\npositive even integer\n</td></tr>\n<tr><td>Wheel diameter</td><td>Number</td><td>80</td><td>Pixels</td></tr>\n<tr><td>Show velocity vectors</td><td>Boolean</td><td>true</td></tr>\n</table>\n\n  kMecanumDrive : Displays a mecanum drive with a widget that displays the speed of each\nwheel, and vectors for the direction and rotation of the drivebase. The\nwidget will be controllable if the robot is in test mode. \nSupported\ntypes:  - MecanumDrive\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Show velocity vectors</td><td>Boolean</td><td>true</td></tr>\n</table>\n\n  kCameraStream : Displays a camera stream.\nSupported types:\n\n- VideoSource (as long as it is streaming on an MJPEG server)\n\nCustom properties:\n<table>\n<tr><th>Name</th><th>Type</th><th>Default Value</th><th>Notes</th></tr>\n<tr><td>Show crosshair</td><td>Boolean</td><td>true</td>\n<td>Show or hide a crosshair on the image</td></tr>\n<tr><td>Crosshair color</td><td>Color</td><td>\"white\"</td>\n<td>Can be a string or a rgba integer</td></tr>\n<tr><td>Show controls</td><td>Boolean</td><td>true</td><td>Show or hide the\nstream controls\n</td></tr>\n<tr><td>Rotation</td><td>String</td><td>\"NONE\"</td>\n<td>Rotates the displayed image. One of {@code [\"NONE\", \"QUARTER_CW\",\n\"QUARTER_CCW\", \"HALF\"]}\n</td></tr>\n</table>\n\n  kField : Displays a field2d object.\nSupported types:\n\n- Field2d");
  pythonEnum.initializeEnum("wpilib.shuffleboard.ShuffleboardEventImportance", ["kCritical", "kHigh", "kLow", "kNormal", "kTrivial"], "Members:\n\n  kTrivial\n\n  kLow\n\n  kNormal\n\n  kHigh\n\n  kCritical");
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 33 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "module", "returnType": "str", "args": [{"name": "importance", "type": "wpilib.shuffleboard.ShuffleboardEventImportance"}], "tooltip": "Returns name of the given enum.\n\n:returns: Name of the given enum.", "importModule": "wpilib.shuffleboard"}, "fields": {"MODULE_OR_CLASS": "wpilib.shuffleboard", "FUNC": "shuffleboardEventImportanceName"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myShuffleboardEventImportance"}}}}}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInLayouts", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInLayouts", "ENUM_VALUE": "kGrid"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInLayouts", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInLayouts", "ENUM_VALUE": "kList"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "k3AxisAccelerometer"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kAccelerometer"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kBooleanBox"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kCameraStream"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kComboBoxChooser"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kCommand"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kDial"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kDifferentialDrive"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kEncoder"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kField"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kGraph"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kGyro"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kMecanumDrive"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kMotorController"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kNumberBar"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kNumberSlider"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kPIDCommand"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kPIDController"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kPowerDistribution"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kRelay"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kSplitButtonChooser"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kTextView"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kToggleButton"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kToggleSwitch"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.BuiltInWidgets", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.BuiltInWidgets", "ENUM_VALUE": "kVoltageView"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.ShuffleboardEventImportance", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.ShuffleboardEventImportance", "ENUM_VALUE": "kCritical"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.ShuffleboardEventImportance", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.ShuffleboardEventImportance", "ENUM_VALUE": "kHigh"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.ShuffleboardEventImportance", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.ShuffleboardEventImportance", "ENUM_VALUE": "kLow"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.ShuffleboardEventImportance", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.ShuffleboardEventImportance", "ENUM_VALUE": "kNormal"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.shuffleboard.ShuffleboardEventImportance", "importModule": "wpilib.shuffleboard"}, "fields": {"ENUM_TYPE": "wpilib.shuffleboard.ShuffleboardEventImportance", "ENUM_VALUE": "kTrivial"}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonModuleCategory = {
    kind: "category",
    name:  "shuffleboard",
    contents: contents,
    moduleName: "wpilib.shuffleboard",
    packageName: "wpilib.shuffleboard",
  };

  return category;
}
