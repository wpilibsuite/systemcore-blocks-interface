// This file was generated. Do not edit!

import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpimath.controller.HolonomicDriveController

export function initialize() {
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 9 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myHolonomicDriveController"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.controller.HolonomicDriveController", "args": [{"name": "xController", "type": "wpimath.controller.PIDController"}, {"name": "yController", "type": "wpimath.controller.PIDController"}, {"name": "thetaController", "type": "wpimath.controller.ProfiledPIDControllerRadians"}], "tooltip": "Constructs a holonomic drive controller.\n\n:param xController:     A PID Controller to respond to error in the\n                        field-relative x direction.\n:param yController:     A PID Controller to respond to error in the\n                        field-relative y direction.\n:param thetaController: A profiled PID controller to respond to error in\n                        angle.", "importModule": "wpimath.controller"}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.HolonomicDriveController"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPIDController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPIDController"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myProfiledPIDControllerRadians"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "holonomicDriveController", "type": "wpimath.controller.HolonomicDriveController"}], "tooltip": "Returns true if the pose error is within tolerance of the reference.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.HolonomicDriveController", "FUNC": "atReference"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myHolonomicDriveController"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myChassisSpeeds"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.kinematics.ChassisSpeeds", "args": [{"name": "holonomicDriveController", "type": "wpimath.controller.HolonomicDriveController"}, {"name": "currentPose", "type": "wpimath.geometry.Pose2d"}, {"name": "trajectoryPose", "type": "wpimath.geometry.Pose2d"}, {"name": "desiredLinearVelocity", "type": "wpimath.units.meters_per_second"}, {"name": "desiredHeading", "type": "wpimath.geometry.Rotation2d"}], "tooltip": "Returns the next output of the holonomic drive controller.\n\n:param currentPose:           The current pose, as measured by odometry or pose\n                              estimator.\n:param trajectoryPose:        The desired trajectory pose, as sampled for the\n                              current timestep.\n:param desiredLinearVelocity: The desired linear velocity.\n:param desiredHeading:        The desired heading.\n\n:returns: The next output of the holonomic drive controller.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.HolonomicDriveController", "FUNC": "calculate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myHolonomicDriveController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG4": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myChassisSpeeds"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.kinematics.ChassisSpeeds", "args": [{"name": "holonomicDriveController", "type": "wpimath.controller.HolonomicDriveController"}, {"name": "currentPose", "type": "wpimath.geometry.Pose2d"}, {"name": "desiredState", "type": "wpimath.trajectory.Trajectory.State"}, {"name": "desiredHeading", "type": "wpimath.geometry.Rotation2d"}], "tooltip": "Returns the next output of the holonomic drive controller.\n\n:param currentPose:    The current pose, as measured by odometry or pose\n                       estimator.\n:param desiredState:   The desired trajectory pose, as sampled for the current\n                       timestep.\n:param desiredHeading: The desired heading.\n\n:returns: The next output of the holonomic drive controller.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.HolonomicDriveController", "FUNC": "calculate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myHolonomicDriveController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myState"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myProfiledPIDControllerRadians"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.controller.ProfiledPIDControllerRadians", "args": [{"name": "holonomicDriveController", "type": "wpimath.controller.HolonomicDriveController"}], "tooltip": "Returns the rotation ProfiledPIDController", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.HolonomicDriveController", "FUNC": "getThetaController"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myHolonomicDriveController"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPIDController"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.controller.PIDController", "args": [{"name": "holonomicDriveController", "type": "wpimath.controller.HolonomicDriveController"}], "tooltip": "Returns the X PIDController", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.HolonomicDriveController", "FUNC": "getXController"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myHolonomicDriveController"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPIDController"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.controller.PIDController", "args": [{"name": "holonomicDriveController", "type": "wpimath.controller.HolonomicDriveController"}], "tooltip": "Returns the Y PIDController", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.HolonomicDriveController", "FUNC": "getYController"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myHolonomicDriveController"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "holonomicDriveController", "type": "wpimath.controller.HolonomicDriveController"}, {"name": "enabled", "type": "bool"}], "tooltip": "Enables and disables the controller for troubleshooting purposes. When\nCalculate() is called on a disabled controller, only feedforward values\nare returned.\n\n:param enabled: If the controller is enabled or not.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.HolonomicDriveController", "FUNC": "setEnabled"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myHolonomicDriveController"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "holonomicDriveController", "type": "wpimath.controller.HolonomicDriveController"}, {"name": "tolerance", "type": "wpimath.geometry.Pose2d"}], "tooltip": "Sets the pose error which is considered tolerable for use with\nAtReference().\n\n:param tolerance: Pose error which is tolerable.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.HolonomicDriveController", "FUNC": "setTolerance"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myHolonomicDriveController"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "HolonomicDriveController",
    contents: contents,
    className: "wpimath.controller.HolonomicDriveController",
  };

  return category;
}
