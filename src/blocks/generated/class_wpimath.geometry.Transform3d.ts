// This file was generated. Do not edit!

import * as getPythonVariable from "../mrc_get_python_variable";
import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpimath.geometry.Transform3d

export function initialize() {
  getPythonVariable.initializeInstanceVariableGetter("wpimath.geometry.Transform3d", "wpimath.units.meters", ["x", "y", "z"], ["", "", ""]);
  getPythonVariable.initializeInstanceVariableGetter("wpimath.geometry.Transform3d", "wpimath.units.feet", ["x_feet", "y_feet", "z_feet"], ["", "", ""]);
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 19 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Transform3d", "varType": "wpimath.units.meters", "importModule": "", "selfLabel": "transform3d", "selfType": "wpimath.geometry.Transform3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "VAR": "x"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Transform3d", "varType": "wpimath.units.meters", "importModule": "", "selfLabel": "transform3d", "selfType": "wpimath.geometry.Transform3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "VAR": "y"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Transform3d", "varType": "wpimath.units.meters", "importModule": "", "selfLabel": "transform3d", "selfType": "wpimath.geometry.Transform3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "VAR": "z"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Transform3d", "varType": "wpimath.units.feet", "importModule": "", "selfLabel": "transform3d", "selfType": "wpimath.geometry.Transform3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "VAR": "x_feet"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Transform3d", "varType": "wpimath.units.feet", "importModule": "", "selfLabel": "transform3d", "selfType": "wpimath.geometry.Transform3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "VAR": "y_feet"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Transform3d", "varType": "wpimath.units.feet", "importModule": "", "selfLabel": "transform3d", "selfType": "wpimath.geometry.Transform3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "VAR": "z_feet"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTransform3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Transform3d", "args": [{"name": "initial", "type": "wpimath.geometry.Pose3d"}, {"name": "final", "type": "wpimath.geometry.Pose3d"}], "tooltip": "Constructs the transform that maps the initial pose to the final pose.\n\n:param initial: The initial pose for the transformation.\n:param final:   The final pose for the transformation.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose3d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose3d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTransform3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Transform3d", "args": [{"name": "translation", "type": "wpimath.geometry.Translation3d"}, {"name": "rotation", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Constructs a transform with the given translation and rotation components.\n\n:param translation: Translational component of the transform.\n:param rotation:    Rotational component of the transform.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTransform3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Transform3d", "args": [{"name": "x", "type": "wpimath.units.meters"}, {"name": "y", "type": "wpimath.units.meters"}, {"name": "z", "type": "wpimath.units.meters"}, {"name": "rotation", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Constructs a transform with x, y, and z translations instead of a separate\nTranslation3d.\n\n:param x:        The x component of the translational component of the transform.\n:param y:        The y component of the translational component of the transform.\n:param z:        The z component of the translational component of the transform.\n:param rotation: The rotational component of the transform.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d"}, "inputs": {"ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTransform3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Transform3d", "args": [], "tooltip": "Constructs the identity transform -- maps an initial pose to itself.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTransform3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Transform3d", "args": [{"name": "transform", "type": "wpimath.geometry.Transform2d"}], "tooltip": "Constructs a 3D transform from a 2D transform in the X-Y plane.\n**\n\n:param transform: The 2D transform.\n                  @see Rotation3d(Rotation2d)\n                  @see Translation3d(Translation2d)", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform2d"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.meters", "args": [{"name": "transform3d", "type": "wpimath.geometry.Transform3d"}], "tooltip": "Returns the X component of the transformation's translation.\n\n:returns: The x component of the transformation's translation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "FUNC": "X"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.meters", "args": [{"name": "transform3d", "type": "wpimath.geometry.Transform3d"}], "tooltip": "Returns the Y component of the transformation's translation.\n\n:returns: The y component of the transformation's translation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "FUNC": "Y"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.meters", "args": [{"name": "transform3d", "type": "wpimath.geometry.Transform3d"}], "tooltip": "Returns the Z component of the transformation's translation.\n\n:returns: The z component of the transformation's translation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "FUNC": "Z"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTransform3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "wpimath.geometry.Transform3d", "args": [{"name": "matrix", "type": "numpy.ndarray[numpy.float64[4, 4]]"}], "tooltip": "Constructs a transform with the specified affine transformation matrix.\n\n:param matrix: The affine transformation matrix.\n               @throws std::domain_error if the affine transformation matrix is invalid.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "FUNC": "fromMatrix"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTransform3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Transform3d", "args": [{"name": "transform3d", "type": "wpimath.geometry.Transform3d"}], "tooltip": "Invert the transformation. This is useful for undoing a transformation.\n\n:returns: The inverted transformation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "FUNC": "inverse"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Rotation3d", "args": [{"name": "transform3d", "type": "wpimath.geometry.Transform3d"}], "tooltip": "Returns the rotational component of the transformation.\n\n:returns: Reference to the rotational component of the transform.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "FUNC": "rotation"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "numpy.ndarray[numpy.float64[4, 4]]", "args": [{"name": "transform3d", "type": "wpimath.geometry.Transform3d"}], "tooltip": "Returns an affine transformation matrix representation of this\ntransformation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "FUNC": "toMatrix"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTranslation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Translation3d", "args": [{"name": "transform3d", "type": "wpimath.geometry.Transform3d"}], "tooltip": "Returns the translation component of the transformation.\n\n:returns: Reference to the translational component of the transform.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Transform3d", "FUNC": "translation"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform3d"}}}}}}}}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "Transform3d",
    contents: contents,
    className: "wpimath.geometry.Transform3d",
  };

  return category;
}
