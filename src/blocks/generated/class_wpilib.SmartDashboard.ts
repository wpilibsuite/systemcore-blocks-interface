// This file was generated. Do not edit!

import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpilib.SmartDashboard

export function initialize() {
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 36 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "None", "args": [{"name": "key", "type": "str"}], "tooltip": "Stop making a key's value persistent through program restarts.\nThe key cannot be null.\n\n:param key: the key name", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "clearPersistent"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}], "tooltip": "Determines whether the given key is in this table.\n\n:param key: the key to search for\n\n:returns: true if the table as a value assigned to the given key", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "containsKey"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "object", "args": [{"name": "keyName", "type": "str"}, {"name": "defaultValue", "type": "object"}], "tooltip": "Returns the value at the specified key.\n\nIf the key is not found, returns the default value.\n\n:param keyName:      the key\n:param defaultValue: the default value to return if key doesn't exist\n\n:returns: the value", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "getBoolean"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "object", "args": [{"name": "key", "type": "str"}, {"name": "defaultValue", "type": "object"}], "tooltip": "Returns the boolean array the key maps to.\n\nIf the key does not exist or is of different type, it will return the\ndefault value.\n\n:param key:          The key to look up.\n:param defaultValue: The value to be returned if no value is found.\n\n:returns: the value associated with the given key or the given default value\n          if there is no value associated with the key\n          \n          .. note:: This makes a copy of the array. If the overhead of this is a concern,\n             use GetValue() instead.\n          \n          .. note:: The returned array is std::vector<int> instead of std::vector<bool>\n             because std::vector<bool> is special-cased in C++. 0 is false, any\n             non-zero value is true.", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "getBooleanArray"}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySendable"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "wpiutil.Sendable", "args": [{"name": "keyName", "type": "str"}], "tooltip": "Returns the value at the specified key.\n\n:param keyName: the key\n\n:returns: the value", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "getData"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myNetworkTableEntry"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "ntcore.NetworkTableEntry", "args": [{"name": "key", "type": "str"}], "tooltip": "Returns an NT Entry mapping to the specified key\n\nThis is useful if an entry is used often, or is read and then modified.\n\n:param key: the key\n\n:returns: the entry for the key", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "getEntry"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myList"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "list[str]", "args": [{"name": "types", "type": "int"}], "tooltip": ":param types: bitmask of types; 0 is treated as a \"don't care\".\n\n:returns: keys currently in the table", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "getKeys"}, "inputs": {"ARG0": {"shadow": {"type": "math_number", "fields": {"NUM": 0.0}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "object", "args": [{"name": "keyName", "type": "str"}, {"name": "defaultValue", "type": "object"}], "tooltip": "Returns the value at the specified key.\n\nIf the key is not found, returns the default value.\n\n:param keyName:      the key\n:param defaultValue: the default value to return if the key doesn't exist\n\n:returns: the value", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "getNumber"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "object", "args": [{"name": "key", "type": "str"}, {"name": "defaultValue", "type": "object"}], "tooltip": "Returns the number array the key maps to.\n\nIf the key does not exist or is of different type, it will return the\ndefault value.\n\n:param key:          The key to look up.\n:param defaultValue: The value to be returned if no value is found.\n\n:returns: the value associated with the given key or the given default value\n          if there is no value associated with the key\n          \n          .. note:: This makes a copy of the array. If the overhead of this is a concern,\n             use GetValue() instead.", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "getNumberArray"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "object", "args": [{"name": "key", "type": "str"}, {"name": "defaultValue", "type": "object"}], "tooltip": "Returns the raw value (byte array) the key maps to.\n\nIf the key does not exist or is of different type, it will return the\ndefault value.\n\n:param key:          The key to look up.\n:param defaultValue: The value to be returned if no value is found.\n\n:returns: the value associated with the given key or the given default value\n          if there is no value associated with the key\n          \n          .. note:: This makes a copy of the raw contents. If the overhead of this is a\n             concern, use GetValue() instead.", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "getRaw"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "object", "args": [{"name": "keyName", "type": "str"}, {"name": "defaultValue", "type": "object"}], "tooltip": "Returns the value at the specified key.\n\nIf the key is not found, returns the default value.\n\n:param keyName:      the key\n:param defaultValue: the default value to return if the key doesn't exist\n\n:returns: the value", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "getString"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "object", "args": [{"name": "key", "type": "str"}, {"name": "defaultValue", "type": "object"}], "tooltip": "Returns the string array the key maps to.\n\nIf the key does not exist or is of different type, it will return the\ndefault value.\n\n:param key:          The key to look up.\n:param defaultValue: The value to be returned if no value is found.\n\n:returns: the value associated with the given key or the given default value\n          if there is no value associated with the key\n          \n          .. note:: This makes a copy of the array. If the overhead of this is a concern,\n             use GetValue() instead.", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "getStringArray"}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myValue"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "ntcore.Value", "args": [{"name": "keyName", "type": "str"}], "tooltip": "Retrieves the complex value (such as an array) in this table into the\ncomplex data object.\n\n:param keyName: the key", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "getValue"}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "None", "args": [], "tooltip": "", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "init"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}], "tooltip": "Returns whether the value is persistent through program restarts.\nThe key cannot be null.\n\n:param key: the key name", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "isPersistent"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "None", "args": [{"name": "task", "type": "Callable[[], None]"}], "tooltip": "Posts a task from a listener to the ListenerExecutor, so that it can be run\nsynchronously from the main loop on the next call to updateValues().\n\n:param task: The task to run synchronously from the main thread.", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "postListenerTask"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "keyName", "type": "str"}, {"name": "value", "type": "bool"}], "tooltip": "Maps the specified key to the specified value in this table.\n\nThe value can be retrieved by calling the get method with a key that is\nequal to the original key.\n\n:param keyName: the key\n:param value:   the value\n\n:returns: False if the table key already exists with a different type", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "putBoolean"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}, {"name": "value", "type": "List[int]"}], "tooltip": "Put a boolean array in the table.\n\n:param key:   the key to be assigned to\n:param value: the value that will be assigned\n\n:returns: False if the table key already exists with a different type\n          \n          .. note:: The array must be of int's rather than of bool's because\n             std::vector<bool> is special-cased in C++. 0 is false, any\n             non-zero value is true.", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "putBooleanArray"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myList"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "None", "args": [{"name": "key", "type": "str"}, {"name": "data", "type": "wpiutil.Sendable"}], "tooltip": "Maps the specified key to the specified value in this table.\n\nThe value can be retrieved by calling the get method with a key that is\nequal to the original key.\n\nIn order for the value to appear in the dashboard, it must be registered\nwith SendableRegistry.  WPILib components do this automatically.\n\n:param key:  the key\n:param data: the value", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "putData"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySendable"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "None", "args": [{"name": "value", "type": "wpiutil.Sendable"}], "tooltip": "Maps the specified key (where the key is the name of the Sendable)\nto the specified value in this table.\n\nThe value can be retrieved by calling the get method with a key that is\nequal to the original key.\n\nIn order for the value to appear in the dashboard, it must be registered\nwith SendableRegistry.  WPILib components do this automatically.\n\n:param value: the value", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "putData"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySendable"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "keyName", "type": "str"}, {"name": "value", "type": "float"}], "tooltip": "Maps the specified key to the specified value in this table.\n\nThe value can be retrieved by calling the get method with a key that is\nequal to the original key.\n\n:param keyName: the key\n:param value:   the value\n\n:returns: False if the table key already exists with a different type", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "putNumber"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}, {"name": "value", "type": "List[float]"}], "tooltip": "Put a number array in the table.\n\n:param key:   The key to be assigned to.\n:param value: The value that will be assigned.\n\n:returns: False if the table key already exists with a different type", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "putNumberArray"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myList"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}, {"name": "value", "type": "Buffer"}], "tooltip": "Put a raw value (byte array) in the table.\n\n:param key:   The key to be assigned to.\n:param value: The value that will be assigned.\n\n:returns: False if the table key already exists with a different type", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "putRaw"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "keyName", "type": "str"}, {"name": "value", "type": "str"}], "tooltip": "Maps the specified key to the specified value in this table.\n\nThe value can be retrieved by calling the get method with a key that is\nequal to the original key.\n\n:param keyName: the key\n:param value:   the value\n\n:returns: False if the table key already exists with a different type", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "putString"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}, {"name": "value", "type": "List[str]"}], "tooltip": "Put a string array in the table.\n\n:param key:   The key to be assigned to.\n:param value: The value that will be assigned.\n\n:returns: False if the table key already exists with a different type", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "putStringArray"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myList"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "keyName", "type": "str"}, {"name": "value", "type": "ntcore.Value"}], "tooltip": "Maps the specified key to the specified complex value (such as an array) in\nthis table.\n\nThe value can be retrieved by calling the RetrieveValue method with a key\nthat is equal to the original key.\n\n:param keyName: the key\n:param value:   the value\n\n:returns: False if the table key already exists with a different type", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "putValue"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}, {"name": "defaultValue", "type": "bool"}], "tooltip": "Set the value in the table if key does not exist\n\n:param key:          the key\n:param defaultValue: the value to set if key doesn't exist.\n\n:returns: True if the table key did not already exist, otherwise False", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "setDefaultBoolean"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}, {"name": "defaultValue", "type": "List[int]"}], "tooltip": "Set the value in the table if key does not exist.\n\n:param key:          the key\n:param defaultValue: the value to set if key doesn't exist.\n\n:returns: True if the table key did not already exist, otherwise False", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "setDefaultBooleanArray"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myList"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}, {"name": "defaultValue", "type": "float"}], "tooltip": "Set the value in the table if key does not exist.\n\n:param key:          The key.\n:param defaultValue: The value to set if key doesn't exist.\n\n:returns: True if the table key did not already exist, otherwise False", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "setDefaultNumber"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}, {"name": "defaultValue", "type": "List[float]"}], "tooltip": "Set the value in the table if key does not exist.\n\n:param key:          The key.\n:param defaultValue: The value to set if key doesn't exist.\n\n:returns: True if the table key did not already exist, otherwise False", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "setDefaultNumberArray"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myList"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}, {"name": "defaultValue", "type": "Buffer"}], "tooltip": "Set the value in the table if key does not exist.\n\n:param key:          The key.\n:param defaultValue: The value to set if key doesn't exist.\n\n:returns: True if the table key did not already exist, otherwise False", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "setDefaultRaw"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}, {"name": "defaultValue", "type": "str"}], "tooltip": "Set the value in the table if key does not exist.\n\n:param key:          the key\n:param defaultValue: the value to set if key doesn't exist.\n\n:returns: True if the table key did not already exist, otherwise False", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "setDefaultString"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}, {"name": "defaultValue", "type": "List[str]"}], "tooltip": "Set the value in the table if key does not exist.\n\n:param key:          The key.\n:param defaultValue: The value to set if key doesn't exist.\n\n:returns: True if the table key did not already exist, otherwise False", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "setDefaultStringArray"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myList"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "bool", "args": [{"name": "key", "type": "str"}, {"name": "defaultValue", "type": "ntcore.Value"}], "tooltip": "Set the value in the table if key does not exist.\n\n:param key:          the key\n:param defaultValue: The value to set if key doesn't exist.\n\n:returns: True if the table key did not already exist, otherwise False", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "setDefaultValue"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "None", "args": [{"name": "key", "type": "str"}], "tooltip": "Makes a key's value persistent through program restarts.\n\n:param key: the key to make persistent", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "setPersistent"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "None", "args": [], "tooltip": "Puts all sendable data to the dashboard.", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.SmartDashboard", "FUNC": "updateValues"}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "SmartDashboard",
    contents: contents,
    className: "wpilib.SmartDashboard",
  };

  return category;
}
