// This file was generated. Do not edit!

import * as pythonEnum from "../mrc_get_python_enum_value";
import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpilib.ADIS16448_IMU

export function initialize() {
  pythonEnum.initializeEnum("wpilib.ADIS16448_IMU.CalibrationTime", ["_128ms", "_16s", "_1s", "_256ms", "_2s", "_32ms", "_32s", "_4s", "_512ms", "_64ms", "_64s", "_8s"], "ADIS16448 calibration times.\n\nMembers:\n\n  _32ms : 32 ms calibration time.\n\n  _64ms : 64 ms calibration time.\n\n  _128ms : 128 ms calibration time.\n\n  _256ms : 256 ms calibration time.\n\n  _512ms : 512 ms calibration time.\n\n  _1s : 1 s calibration time.\n\n  _2s : 2 s calibration time.\n\n  _4s : 4 s calibration time.\n\n  _8s : 8 s calibration time.\n\n  _16s : 16 s calibration time.\n\n  _32s : 32 s calibration time.\n\n  _64s : 64 s calibration time.");
  pythonEnum.initializeEnum("wpilib.ADIS16448_IMU.IMUAxis", ["kX", "kY", "kZ"], "IMU axes.\n\nMembers:\n\n  kX : The IMU's X axis.\n\n  kY : The IMU's Y axis.\n\n  kZ : The IMU's Z axis.");
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 46 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myADIS16448_IMU"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpilib.ADIS16448_IMU", "args": [], "tooltip": "IMU constructor on onboard MXP CS0, Z-up orientation, and complementary\nAHRS computation.", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myADIS16448_IMU"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpilib.ADIS16448_IMU", "args": [{"name": "yaw_axis", "type": "wpilib.ADIS16448_IMU.IMUAxis"}, {"name": "port", "type": "wpilib.SPI.Port"}, {"name": "cal_time", "type": "wpilib.ADIS16448_IMU.CalibrationTime"}], "tooltip": "IMU constructor on the specified MXP port and orientation.\n\n:param yaw_axis: The axis where gravity is present. Valid options are kX,\n                 kY, and kZ\n:param port:     The SPI port where the IMU is connected.\n:param cal_time: The calibration time that should be used on start-up.", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myIMUAxis"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPort"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCalibrationTime"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Initialize the IMU.\n\nPerform gyro offset calibration by collecting data for a number of seconds\nand computing the center value. The center value is subtracted from\nsubsequent measurements.\n\nIt's important to make sure that the robot is not moving while the\ncentering calculations are in progress, this is typically done when the\nrobot is first turned on while it's sitting at rest before the match\nstarts.\n\nThe calibration routine can be triggered by the user during runtime.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "calibrate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "int", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}, {"name": "new_cal_time", "type": "wpilib.ADIS16448_IMU.CalibrationTime"}], "tooltip": "Configures the calibration time used for the next calibrate.\n\n:param new_cal_time: The calibration time that should be used", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "configCalTime"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCalibrationTime"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "int", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}, {"name": "decimationRate", "type": "int"}], "tooltip": "Configures the decimation rate of the IMU.\n\n:param decimationRate: The new decimation value.\n\n:returns: 0 if success, 1 if no change, 2 if error.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "configDecRate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.meters_per_second_squared", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the acceleration in the X axis.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getAccelX"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.meters_per_second_squared", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the acceleration in the Y axis.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getAccelY"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.meters_per_second_squared", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the acceleration in the Z axis.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getAccelZ"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.degrees", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the yaw axis angle in degrees (CCW positive).", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getAngle"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.pounds_per_square_inch", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the barometric pressure.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getBarometricPressure"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.degrees", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the accumulated gyro angle in the X axis.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getGyroAngleX"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.degrees", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the accumulated gyro angle in the Y axis.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getGyroAngleY"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.degrees", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the accumulated gyro angle in the Z axis.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getGyroAngleZ"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.degrees_per_second", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the angular rate in the X axis.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getGyroRateX"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.degrees_per_second", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the angular rate in the Y axis.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getGyroRateY"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.degrees_per_second", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the angular rate in the Z axis.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getGyroRateZ"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.teslas", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the magnetic field strength in the X axis.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getMagneticFieldX"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.teslas", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the magnetic field strength in the Y axis.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getMagneticFieldY"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.teslas", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the magnetic field strength in the Z axis.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getMagneticFieldZ"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "int", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Get the SPI port number.\n\n:returns: The SPI port number.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getPort"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.degrees_per_second", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the yaw axis angular rate in degrees per second (CCW positive).", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getRate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.celsius", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the temperature.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getTemperature"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.degrees", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the complementary angle around the X axis computed from\naccelerometer and gyro rate measurements.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getXComplementaryAngle"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.degrees", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the X-axis filtered acceleration angle.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getXFilteredAccelAngle"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.degrees", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the complementary angle around the Y axis computed from\naccelerometer and gyro rate measurements.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getYComplementaryAngle"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.degrees", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Returns the Y-axis filtered acceleration angle.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getYFilteredAccelAngle"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myIMUAxis"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.ADIS16448_IMU.IMUAxis", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "getYawAxis"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}, {"name": "builder", "type": "wpiutil.SendableBuilder"}], "tooltip": "", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "initSendable"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySendableBuilder"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Checks the connection status of the IMU.\n\n:returns: True if the IMU is connected, false otherwise.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "isConnected"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}], "tooltip": "Reset the gyro.\n\nResets the gyro accumulations to a heading of zero. This can be used if\nthere is significant drift in the gyro and it needs to be recalibrated\nafter running.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "reset"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "int", "args": [{"name": "aDIS16448_IMU", "type": "wpilib.ADIS16448_IMU"}, {"name": "yaw_axis", "type": "wpilib.ADIS16448_IMU.IMUAxis"}], "tooltip": "", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.ADIS16448_IMU", "FUNC": "setYawAxis"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myADIS16448_IMU"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myIMUAxis"}}}}}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.CalibrationTime", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.CalibrationTime", "ENUM_VALUE": "_128ms"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.CalibrationTime", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.CalibrationTime", "ENUM_VALUE": "_16s"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.CalibrationTime", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.CalibrationTime", "ENUM_VALUE": "_1s"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.CalibrationTime", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.CalibrationTime", "ENUM_VALUE": "_256ms"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.CalibrationTime", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.CalibrationTime", "ENUM_VALUE": "_2s"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.CalibrationTime", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.CalibrationTime", "ENUM_VALUE": "_32ms"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.CalibrationTime", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.CalibrationTime", "ENUM_VALUE": "_32s"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.CalibrationTime", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.CalibrationTime", "ENUM_VALUE": "_4s"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.CalibrationTime", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.CalibrationTime", "ENUM_VALUE": "_512ms"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.CalibrationTime", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.CalibrationTime", "ENUM_VALUE": "_64ms"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.CalibrationTime", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.CalibrationTime", "ENUM_VALUE": "_64s"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.CalibrationTime", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.CalibrationTime", "ENUM_VALUE": "_8s"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.IMUAxis", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.IMUAxis", "ENUM_VALUE": "kX"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.IMUAxis", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.IMUAxis", "ENUM_VALUE": "kY"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.ADIS16448_IMU.IMUAxis", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.ADIS16448_IMU.IMUAxis", "ENUM_VALUE": "kZ"}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "ADIS16448_IMU",
    contents: contents,
    className: "wpilib.ADIS16448_IMU",
  };

  return category;
}
