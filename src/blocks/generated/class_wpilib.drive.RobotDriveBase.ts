// This file was generated. Do not edit!

import * as pythonEnum from "../mrc_get_python_enum_value";
import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpilib.drive.RobotDriveBase

export function initialize() {
  pythonEnum.initializeEnum("wpilib.drive.RobotDriveBase.MotorType", ["kBack", "kFrontLeft", "kFrontRight", "kLeft", "kRearLeft", "kRearRight", "kRight"], "The location of a motor on the robot for the purpose of driving.\n\nMembers:\n\n  kFrontLeft : Front-left motor.\n\n  kFrontRight : Front-right motor.\n\n  kRearLeft : Rear-left motor.\n\n  kRearRight : Rear-right motor.\n\n  kLeft : Left motor.\n\n  kRight : Right motor.\n\n  kBack : Back motor.");
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 21 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRobotDriveBase"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpilib.drive.RobotDriveBase", "args": [], "tooltip": "", "importModule": "wpilib.drive"}, "fields": {"MODULE_OR_CLASS": "wpilib.drive.RobotDriveBase"}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}], "tooltip": "Check if this motor has exceeded its timeout.\n\nThis method is called periodically to determine if this motor has exceeded\nits timeout value. If it has, the stop method is called, and the motor is\nshut down until its value is updated again.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "check"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "None", "args": [], "tooltip": "Check the motors to see if any have timed out.\n\nThis static method is called periodically to poll all the motors and stop\nany that have timed out.", "importModule": "wpilib.drive"}, "fields": {"MODULE_OR_CLASS": "wpilib.drive.RobotDriveBase", "FUNC": "checkMotors"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}], "tooltip": "Feed the motor safety object.\n\nResets the timer on this object that is used to do the timeouts.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "feed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "robotDriveBase", "type": "wpilib.drive.RobotDriveBase"}], "tooltip": "Feed the motor safety object. Resets the timer that will stop the motors if\nit completes.\n\n@see MotorSafetyHelper::Feed()", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.drive.RobotDriveBase", "FUNC": "feedWatchdog"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotDriveBase"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "str", "args": [{"name": "robotDriveBase", "type": "wpilib.drive.RobotDriveBase"}], "tooltip": "", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.drive.RobotDriveBase", "FUNC": "getDescription"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotDriveBase"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.seconds", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}], "tooltip": "Retrieve the timeout value for the corresponding motor safety object.\n\n:returns: the timeout value.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "getExpiration"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}], "tooltip": "Determine if the motor is still operating or has timed out.\n\n:returns: true if the motor is still operating normally and hasn't timed out.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "isAlive"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}], "tooltip": "Return the state of the motor safety enabled flag.\n\nReturn if the motor safety is currently enabled for this device.\n\n:returns: True if motor safety is enforced for this device.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "isSafetyEnabled"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "robotDriveBase", "type": "wpilib.drive.RobotDriveBase"}, {"name": "deadband", "type": "float"}], "tooltip": "Sets the deadband applied to the drive inputs (e.g., joystick values).\n\nThe default value is 0.02. Inputs smaller than the deadband are set to 0.0\nwhile inputs larger than the deadband are scaled from 0.0 to 1.0. See\nfrc::ApplyDeadband().\n\n:param deadband: The deadband to set.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.drive.RobotDriveBase", "FUNC": "setDeadband"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotDriveBase"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}, {"name": "expirationTime", "type": "wpimath.units.seconds"}], "tooltip": "Set the expiration time for the corresponding motor safety object.\n\n:param expirationTime: The timeout value.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "setExpiration"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "robotDriveBase", "type": "wpilib.drive.RobotDriveBase"}, {"name": "maxOutput", "type": "float"}], "tooltip": "Configure the scaling factor for using RobotDrive with motor controllers in\na mode other than PercentVbus or to limit the maximum output.\n\n:param maxOutput: Multiplied with the output percentage computed by the\n                  drive functions.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.drive.RobotDriveBase", "FUNC": "setMaxOutput"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotDriveBase"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}, {"name": "enabled", "type": "bool"}], "tooltip": "Enable/disable motor safety for this device.\n\nTurn on and off the motor safety option for this PWM object.\n\n:param enabled: True if motor safety is enforced for this object.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "setSafetyEnabled"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "robotDriveBase", "type": "wpilib.drive.RobotDriveBase"}], "tooltip": "", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.drive.RobotDriveBase", "FUNC": "stopMotor"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRobotDriveBase"}}}}}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.drive.RobotDriveBase.MotorType", "importModule": "wpilib.drive"}, "fields": {"ENUM_TYPE": "wpilib.drive.RobotDriveBase.MotorType", "ENUM_VALUE": "kBack"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.drive.RobotDriveBase.MotorType", "importModule": "wpilib.drive"}, "fields": {"ENUM_TYPE": "wpilib.drive.RobotDriveBase.MotorType", "ENUM_VALUE": "kFrontLeft"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.drive.RobotDriveBase.MotorType", "importModule": "wpilib.drive"}, "fields": {"ENUM_TYPE": "wpilib.drive.RobotDriveBase.MotorType", "ENUM_VALUE": "kFrontRight"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.drive.RobotDriveBase.MotorType", "importModule": "wpilib.drive"}, "fields": {"ENUM_TYPE": "wpilib.drive.RobotDriveBase.MotorType", "ENUM_VALUE": "kLeft"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.drive.RobotDriveBase.MotorType", "importModule": "wpilib.drive"}, "fields": {"ENUM_TYPE": "wpilib.drive.RobotDriveBase.MotorType", "ENUM_VALUE": "kRearLeft"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.drive.RobotDriveBase.MotorType", "importModule": "wpilib.drive"}, "fields": {"ENUM_TYPE": "wpilib.drive.RobotDriveBase.MotorType", "ENUM_VALUE": "kRearRight"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.drive.RobotDriveBase.MotorType", "importModule": "wpilib.drive"}, "fields": {"ENUM_TYPE": "wpilib.drive.RobotDriveBase.MotorType", "ENUM_VALUE": "kRight"}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "RobotDriveBase",
    contents: contents,
    className: "wpilib.drive.RobotDriveBase",
  };

  return category;
}
