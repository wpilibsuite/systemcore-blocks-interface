// This file was generated. Do not edit!

import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpimath.controller.ControlAffinePlantInversionFeedforward_2_2

export function initialize() {
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 10 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myControlAffinePlantInversionFeedforward_2_2"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2", "args": [{"name": "f", "type": "Callable[[numpy.ndarray[numpy.float64[2, 1]], numpy.ndarray[numpy.float64[2, 1]]], numpy.ndarray[numpy.float64[2, 1]]]"}, {"name": "dt", "type": "wpimath.units.seconds"}], "tooltip": "Constructs a feedforward with given model dynamics as a function\nof state and input.\n\n:param f:  A vector-valued function of x, the state, and\n           u, the input, that returns the derivative of\n           the state vector. HAS to be control-affine\n           (of the form f(x) + Bu).\n:param dt: The timestep between calls of calculate().", "importModule": "wpimath.controller"}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myControlAffinePlantInversionFeedforward_2_2"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2", "args": [{"name": "f", "type": "Callable[[numpy.ndarray[numpy.float64[2, 1]]], numpy.ndarray[numpy.float64[2, 1]]]"}, {"name": "B", "type": "numpy.ndarray[numpy.float64[2, 2]]"}, {"name": "dt", "type": "wpimath.units.seconds"}], "tooltip": "Constructs a feedforward with given model dynamics as a function of state,\nand the plant's B matrix(continuous input matrix).\n\n:param f:  A vector-valued function of x, the state,\n           that returns the derivative of the state vector.\n:param B:  Continuous input matrix of the plant being controlled.\n:param dt: The timestep between calls of calculate().", "importModule": "wpimath.controller"}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "numpy.ndarray[numpy.float64[2, 1]]", "args": [{"name": "controlAffinePlantInversionFeedforward_2_2", "type": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2"}], "tooltip": "Returns the current reference vector r.\n\n:returns: The current reference vector.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2", "FUNC": "R"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myControlAffinePlantInversionFeedforward_2_2"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "float", "args": [{"name": "controlAffinePlantInversionFeedforward_2_2", "type": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2"}, {"name": "i", "type": "int"}], "tooltip": "Returns an element of the reference vector r.\n\n:param i: Row of r.\n\n:returns: The row of the current reference vector.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2", "FUNC": "R"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myControlAffinePlantInversionFeedforward_2_2"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "numpy.ndarray[numpy.float64[2, 1]]", "args": [{"name": "controlAffinePlantInversionFeedforward_2_2", "type": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2"}, {"name": "nextR", "type": "numpy.ndarray[numpy.float64[2, 1]]"}], "tooltip": "Calculate the feedforward with only the desired\nfuture reference. This uses the internally stored \"current\"\nreference.\n\nIf this method is used the initial state of the system is the one set using\nReset(const StateVector&). If the initial state is not\nset it defaults to a zero vector.\n\n:param nextR: The reference state of the future timestep (k + dt).\n\n:returns: The calculated feedforward.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2", "FUNC": "calculate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myControlAffinePlantInversionFeedforward_2_2"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "numpy.ndarray[numpy.float64[2, 1]]", "args": [{"name": "controlAffinePlantInversionFeedforward_2_2", "type": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2"}, {"name": "r", "type": "numpy.ndarray[numpy.float64[2, 1]]"}, {"name": "nextR", "type": "numpy.ndarray[numpy.float64[2, 1]]"}], "tooltip": "Calculate the feedforward with current and future reference vectors.\n\n:param r:     The reference state of the current timestep (k).\n:param nextR: The reference state of the future timestep (k + dt).\n\n:returns: The calculated feedforward.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2", "FUNC": "calculate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myControlAffinePlantInversionFeedforward_2_2"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "controlAffinePlantInversionFeedforward_2_2", "type": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2"}, {"name": "initialState", "type": "numpy.ndarray[numpy.float64[2, 1]]"}], "tooltip": "Resets the feedforward with a specified initial state vector.\n\n:param initialState: The initial state vector.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2", "FUNC": "reset"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myControlAffinePlantInversionFeedforward_2_2"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "controlAffinePlantInversionFeedforward_2_2", "type": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2"}], "tooltip": "Resets the feedforward with a zero initial state vector.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2", "FUNC": "reset"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myControlAffinePlantInversionFeedforward_2_2"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "numpy.ndarray[numpy.float64[2, 1]]", "args": [{"name": "controlAffinePlantInversionFeedforward_2_2", "type": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2"}], "tooltip": "Returns the previously calculated feedforward as an input vector.\n\n:returns: The calculated feedforward.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2", "FUNC": "uff"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myControlAffinePlantInversionFeedforward_2_2"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "float", "args": [{"name": "controlAffinePlantInversionFeedforward_2_2", "type": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2"}, {"name": "i", "type": "int"}], "tooltip": "Returns an element of the previously calculated feedforward.\n\n:param i: Row of uff.\n\n:returns: The row of the calculated feedforward.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2", "FUNC": "uff"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myControlAffinePlantInversionFeedforward_2_2"}}}}}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "ControlAffinePlantInversionFeedforward_2_2",
    contents: contents,
    className: "wpimath.controller.ControlAffinePlantInversionFeedforward_2_2",
  };

  return category;
}
