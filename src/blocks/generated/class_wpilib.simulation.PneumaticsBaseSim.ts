// This file was generated. Do not edit!

import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpilib.simulation.PneumaticsBaseSim

export function initialize() {
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 21 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpilib.simulation.PneumaticsBaseSim", "args": [{"name": "index", "type": "int"}], "tooltip": "Constructs a PneumaticsBaseSim with the given index.\n\n:param index: The index.", "importModule": "wpilib.simulation"}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpilib.simulation.PneumaticsBaseSim", "args": [{"name": "module", "type": "wpilib.PneumaticsBase"}], "tooltip": "Constructs a PneumaticsBaseSim for the given module.\n\n:param module: The module.", "importModule": "wpilib.simulation"}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBase"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "int", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}], "tooltip": "Get the current value of all solenoid outputs.\n\n:returns: the solenoid outputs (1 bit per output)", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "getAllSolenoidOutputs"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "float", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}], "tooltip": "Read the compressor current.\n\n:returns: the current of the compressor connected to this module", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "getCompressorCurrent"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}], "tooltip": "Check if the compressor is on.\n\n:returns: true if the compressor is active", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "getCompressorOn"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "wpilib.simulation.PneumaticsBaseSim", "args": [{"name": "module", "type": "int"}, {"name": "type", "type": "wpilib.PneumaticsModuleType"}], "tooltip": "", "importModule": "wpilib.simulation"}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "getForType"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsModuleType"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}], "tooltip": "Check whether the PCM/PH has been initialized.\n\n:returns: true if initialized", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "getInitialized"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}], "tooltip": "Check the value of the pressure switch.\n\n:returns: the pressure switch value", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "getPressureSwitch"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}, {"name": "channel", "type": "int"}], "tooltip": "Check the solenoid output on a specific channel.\n\n:param channel: the channel to check\n\n:returns: the solenoid output", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "getSolenoidOutput"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback to be run whenever the compressor current changes.\n\n:param callback:      the callback\n:param initialNotify: whether to call the callback with the initial state\n\n:returns: the :class:`.CallbackStore` object associated with this callback.\n          Save a reference to this object; it being deconstructed cancels the\n          callback.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "registerCompressorCurrentCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback to be run when the compressor activates.\n\n:param callback:      the callback\n:param initialNotify: whether to run the callback with the initial state\n\n:returns: the :class:`.CallbackStore` object associated with this callback.\n          Save a reference to this object; it being deconstructed cancels the\n          callback.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "registerCompressorOnCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback to be run when the PCM/PH is initialized.\n\n:param callback:      the callback\n:param initialNotify: whether to run the callback with the initial state\n\n:returns: the :class:`.CallbackStore` object associated with this callback.\n          Save a reference to this object; it being deconstructed cancels the\n          callback.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "registerInitializedCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback to be run whenever the pressure switch value changes.\n\n:param callback:      the callback\n:param initialNotify: whether the callback should be called with the initial\n                      value\n\n:returns: the :class:`.CallbackStore` object associated with this callback.\n          Save a reference to this object; it being deconstructed cancels the\n          callback.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "registerPressureSwitchCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}, {"name": "channel", "type": "int"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback to be run when the solenoid output on a channel\nchanges.\n\n:param channel:       the channel to monitor\n:param callback:      the callback\n:param initialNotify: should the callback be run with the initial value\n\n:returns: the :class:`.CallbackStore` object associated with this callback.\n          Save a reference to this object; it being deconstructed cancels the\n          callback.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "registerSolenoidOutputCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}, "ARG2": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}], "tooltip": "Reset all simulation data for this object.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "resetData"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}, {"name": "outputs", "type": "int"}], "tooltip": "Change all of the solenoid outputs.\n\n:param outputs: the new solenoid outputs (1 bit per output)", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "setAllSolenoidOutputs"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}, {"name": "compressorCurrent", "type": "float"}], "tooltip": "Set the compressor current.\n\n:param compressorCurrent: the new compressor current", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "setCompressorCurrent"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}, {"name": "compressorOn", "type": "bool"}], "tooltip": "Set whether the compressor is active.\n\n:param compressorOn: the new value", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "setCompressorOn"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}, {"name": "initialized", "type": "bool"}], "tooltip": "Define whether the PCM/PH has been initialized.\n\n:param initialized: true for initialized", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "setInitialized"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}, {"name": "pressureSwitch", "type": "bool"}], "tooltip": "Set the value of the pressure switch.\n\n:param pressureSwitch: the new value", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "setPressureSwitch"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "pneumaticsBaseSim", "type": "wpilib.simulation.PneumaticsBaseSim"}, {"name": "channel", "type": "int"}, {"name": "solenoidOutput", "type": "bool"}], "tooltip": "Change the solenoid output on a specific channel.\n\n:param channel:        the channel to check\n:param solenoidOutput: the new solenoid output", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.PneumaticsBaseSim", "FUNC": "setSolenoidOutput"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPneumaticsBaseSim"}}}}}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "PneumaticsBaseSim",
    contents: contents,
    className: "wpilib.simulation.PneumaticsBaseSim",
  };

  return category;
}
