// This file was generated. Do not edit!

import * as getPythonVariable from "../mrc_get_python_variable";
import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpimath.geometry.Ellipse2d

export function initialize() {
  getPythonVariable.initializeInstanceVariableGetter("wpimath.geometry.Ellipse2d", "wpimath.units.meters", ["xsemiaxis", "ysemiaxis"], ["", ""]);
  getPythonVariable.initializeInstanceVariableGetter("wpimath.geometry.Ellipse2d", "wpimath.units.feet", ["xsemiaxis_feet", "ysemiaxis_feet"], ["", ""]);
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 16 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Ellipse2d", "varType": "wpimath.units.meters", "importModule": "", "selfLabel": "ellipse2d", "selfType": "wpimath.geometry.Ellipse2d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "VAR": "xsemiaxis"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Ellipse2d", "varType": "wpimath.units.meters", "importModule": "", "selfLabel": "ellipse2d", "selfType": "wpimath.geometry.Ellipse2d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "VAR": "ysemiaxis"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Ellipse2d", "varType": "wpimath.units.feet", "importModule": "", "selfLabel": "ellipse2d", "selfType": "wpimath.geometry.Ellipse2d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "VAR": "xsemiaxis_feet"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Ellipse2d", "varType": "wpimath.units.feet", "importModule": "", "selfLabel": "ellipse2d", "selfType": "wpimath.geometry.Ellipse2d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "VAR": "ysemiaxis_feet"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myEllipse2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Ellipse2d", "args": [{"name": "center", "type": "wpimath.geometry.Pose2d"}, {"name": "xSemiAxis", "type": "wpimath.units.meters"}, {"name": "ySemiAxis", "type": "wpimath.units.meters"}], "tooltip": "Constructs an ellipse around a center point and two semi-axes, a horizontal\nand vertical one.\n\n:param center:    The center of the ellipse.\n:param xSemiAxis: The x semi-axis.\n:param ySemiAxis: The y semi-axis.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myEllipse2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Ellipse2d", "args": [{"name": "center", "type": "wpimath.geometry.Translation2d"}, {"name": "radius", "type": "float"}], "tooltip": "Constructs a perfectly circular ellipse with the specified radius.\n\n:param center: The center of the circle.\n:param radius: The radius of the circle.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myPose2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Pose2d", "args": [{"name": "ellipse2d", "type": "wpimath.geometry.Ellipse2d"}], "tooltip": "Returns the center of the ellipse.\n\n:returns: The center of the ellipse.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "FUNC": "center"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "ellipse2d", "type": "wpimath.geometry.Ellipse2d"}, {"name": "point", "type": "wpimath.geometry.Translation2d"}], "tooltip": "Checks if a point is contained within this ellipse. This is inclusive, if\nthe point lies on the circumference this will return ``true``.\n\n:param point: The point to check.\n\n:returns: True, if the point is within or on the ellipse.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "FUNC": "contains"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.meters", "args": [{"name": "ellipse2d", "type": "wpimath.geometry.Ellipse2d"}, {"name": "point", "type": "wpimath.geometry.Translation2d"}], "tooltip": "Returns the distance between the perimeter of the ellipse and the point.\n\n:param point: The point to check.\n\n:returns: The distance (0, if the point is contained by the ellipse)", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "FUNC": "distance"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTuple"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "Tuple[wpimath.geometry._geometry.Translation2d, wpimath.geometry._geometry.Translation2d]", "args": [{"name": "ellipse2d", "type": "wpimath.geometry.Ellipse2d"}], "tooltip": "Returns the focal points of the ellipse. In a perfect circle, this will\nalways return the center.\n\n:returns: The focal points.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "FUNC": "focalPoints"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myEllipse2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "wpimath.geometry.Ellipse2d", "args": [{"name": "center", "type": "wpimath.geometry.Pose2d"}, {"name": "xSemiAxis", "type": "wpimath.units.feet"}, {"name": "ySemiAxis", "type": "wpimath.units.feet"}], "tooltip": "", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "FUNC": "fromFeet"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myPose2d"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "ellipse2d", "type": "wpimath.geometry.Ellipse2d"}, {"name": "point", "type": "wpimath.geometry.Translation2d"}], "tooltip": "Checks if a point is intersected by this ellipse's circumference.\n\n:param point: The point to check.\n\n:returns: True, if this ellipse's circumference intersects the point.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "FUNC": "intersects"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTranslation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Translation2d", "args": [{"name": "ellipse2d", "type": "wpimath.geometry.Ellipse2d"}, {"name": "point", "type": "wpimath.geometry.Translation2d"}], "tooltip": "Returns the nearest point that is contained within the ellipse.\n\n:param point: The point that this will find the nearest point to.\n\n:returns: A new point that is nearest to ``point`` and contained in the\n          ellipse.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "FUNC": "nearest"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myEllipse2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Ellipse2d", "args": [{"name": "ellipse2d", "type": "wpimath.geometry.Ellipse2d"}, {"name": "other", "type": "wpimath.geometry.Rotation2d"}], "tooltip": "Rotates the center of the ellipse and returns the new ellipse.\n\n:param other: The rotation to transform by.\n\n:returns: The rotated ellipse.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "FUNC": "rotateBy"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Rotation2d", "args": [{"name": "ellipse2d", "type": "wpimath.geometry.Ellipse2d"}], "tooltip": "Returns the rotational component of the ellipse.\n\n:returns: The rotational component of the ellipse.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "FUNC": "rotation"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myEllipse2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Ellipse2d", "args": [{"name": "ellipse2d", "type": "wpimath.geometry.Ellipse2d"}, {"name": "other", "type": "wpimath.geometry.Transform2d"}], "tooltip": "Transforms the center of the ellipse and returns the new ellipse.\n\n:param other: The transform to transform by.\n\n:returns: The transformed ellipse.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Ellipse2d", "FUNC": "transformBy"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myEllipse2d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTransform2d"}}}}}}}}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "Ellipse2d",
    contents: contents,
    className: "wpimath.geometry.Ellipse2d",
  };

  return category;
}
