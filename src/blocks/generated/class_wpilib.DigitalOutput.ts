// This file was generated. Do not edit!

import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpilib.DigitalOutput

export function initialize() {
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 16 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myDigitalOutput"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpilib.DigitalOutput", "args": [{"name": "channel", "type": "int"}], "tooltip": "Create an instance of a digital output.\n\nCreate a digital output given a channel.\n\n:param channel: The digital channel 0-9 are on-board, 10-25 are on the MXP\n                port", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput"}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}], "tooltip": "Change this line from a PWM output back to a static Digital Output line.\n\nFree up one of the 6 DO PWM generator resources that were in use.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "disablePWM"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}, {"name": "dutyCycle", "type": "float"}], "tooltip": "Enable a PWM PPS (Pulse Per Second) Output on this line.\n\nAllocate one of the 6 DO PWM generator resources from this module.\n\nSupply the duty-cycle to output.\n\nThe resolution of the duty cycle is 8-bit.\n\n:param dutyCycle: The duty-cycle to start generating. [0..1]", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "enablePPS"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}, {"name": "initialDutyCycle", "type": "float"}], "tooltip": "Enable a PWM Output on this line.\n\nAllocate one of the 6 DO PWM generator resources from this module.\n\nSupply the initial duty-cycle to output so as to avoid a glitch when first\nstarting.\n\nThe resolution of the duty cycle is 8-bit for low frequencies (1kHz or\nless) but is reduced the higher the frequency of the PWM signal is.\n\n:param initialDutyCycle: The duty-cycle to start generating. [0..1]", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "enablePWM"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}], "tooltip": "Gets the value being output from the Digital Output.\n\n:returns: the state of the digital output.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "get"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myAnalogTriggerType"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.AnalogTriggerType", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}], "tooltip": ":returns: The type of analog trigger output to be used. 0 for Digitals", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "getAnalogTriggerTypeForRouting"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "int", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}], "tooltip": ":returns: The GPIO channel number that this object represents.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "getChannel"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "int", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}], "tooltip": ":returns: The HAL Handle to the specified source.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "getPortHandleForRouting"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}, {"name": "builder", "type": "wpiutil.SendableBuilder"}], "tooltip": "", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "initSendable"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySendableBuilder"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}], "tooltip": "Is source an AnalogTrigger", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "isAnalogTrigger"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}], "tooltip": "Determine if the pulse is still going.\n\nDetermine if a previously started pulse is still going.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "isPulsing"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}, {"name": "pulseLength", "type": "wpimath.units.seconds"}], "tooltip": "Output a single pulse on the digital output line.\n\nSend a single pulse on the digital output line where the pulse duration is\nspecified in seconds. Maximum of 65535 microseconds.\n\n:param pulseLength: The pulse length in seconds", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "pulse"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}, {"name": "value", "type": "bool"}], "tooltip": "Set the value of a digital output.\n\nSet the value of a digital output to either one (true) or zero (false).\n\n:param value: 1 (true) for high, 0 (false) for disabled", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "set"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}, {"name": "rate", "type": "float"}], "tooltip": "Change the PWM frequency of the PWM output on a Digital Output line.\n\nThe valid range is from 0.6 Hz to 19 kHz.  The frequency resolution is\nlogarithmic.\n\nThere is only one PWM frequency for all digital channels.\n\n:param rate: The frequency to output all digital output PWM signals.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "setPWMRate"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}, {"name": "device", "type": "int"}], "tooltip": "Indicates this output is used by a simulated device.\n\n:param device: simulated device handle", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "setSimDevice"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "digitalOutput", "type": "wpilib.DigitalOutput"}, {"name": "dutyCycle", "type": "float"}], "tooltip": "Change the duty-cycle that is being generated on the line.\n\nThe resolution of the duty cycle is 8-bit for low frequencies (1kHz or\nless) but is reduced the higher the frequency of the PWM signal is.\n\n:param dutyCycle: The duty-cycle to change to. [0..1]", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.DigitalOutput", "FUNC": "updateDutyCycle"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDigitalOutput"}}}}}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "DigitalOutput",
    contents: contents,
    className: "wpilib.DigitalOutput",
  };

  return category;
}
