// This file was generated. Do not edit!

import * as getPythonVariable from "../mrc_get_python_variable";
import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpimath.geometry.Translation3d

export function initialize() {
  getPythonVariable.initializeInstanceVariableGetter("wpimath.geometry.Translation3d", "wpimath.units.meters", ["x", "y", "z"], ["", "", ""]);
  getPythonVariable.initializeInstanceVariableGetter("wpimath.geometry.Translation3d", "wpimath.units.feet", ["x_feet", "y_feet", "z_feet"], ["", "", ""]);
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 22 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Translation3d", "varType": "wpimath.units.meters", "importModule": "", "selfLabel": "translation3d", "selfType": "wpimath.geometry.Translation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "VAR": "x"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Translation3d", "varType": "wpimath.units.meters", "importModule": "", "selfLabel": "translation3d", "selfType": "wpimath.geometry.Translation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "VAR": "y"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Translation3d", "varType": "wpimath.units.meters", "importModule": "", "selfLabel": "translation3d", "selfType": "wpimath.geometry.Translation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "VAR": "z"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Translation3d", "varType": "wpimath.units.feet", "importModule": "", "selfLabel": "translation3d", "selfType": "wpimath.geometry.Translation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "VAR": "x_feet"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Translation3d", "varType": "wpimath.units.feet", "importModule": "", "selfLabel": "translation3d", "selfType": "wpimath.geometry.Translation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "VAR": "y_feet"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Translation3d", "varType": "wpimath.units.feet", "importModule": "", "selfLabel": "translation3d", "selfType": "wpimath.geometry.Translation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "VAR": "z_feet"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTranslation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Translation3d", "args": [], "tooltip": "Constructs a Translation3d with X, Y, and Z components equal to zero.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTranslation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Translation3d", "args": [{"name": "x", "type": "wpimath.units.meters"}, {"name": "y", "type": "wpimath.units.meters"}, {"name": "z", "type": "wpimath.units.meters"}], "tooltip": "Constructs a Translation3d with the X, Y, and Z components equal to the\nprovided values.\n\n:param x: The x component of the translation.\n:param y: The y component of the translation.\n:param z: The z component of the translation.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTranslation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Translation3d", "args": [{"name": "distance", "type": "wpimath.units.meters"}, {"name": "angle", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Constructs a Translation3d with the provided distance and angle. This is\nessentially converting from polar coordinates to Cartesian coordinates.\n\n:param distance: The distance from the origin to the end of the translation.\n:param angle:    The angle between the x-axis and the translation vector.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTranslation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Translation3d", "args": [{"name": "vector", "type": "numpy.ndarray[numpy.float64[3, 1]]"}], "tooltip": "Constructs a Translation3d from a 3D translation vector. The values are\nassumed to be in meters.\n\n:param vector: The translation vector.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTranslation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Translation3d", "args": [{"name": "translation", "type": "wpimath.geometry.Translation2d"}], "tooltip": "Constructs a 3D translation from a 2D translation in the X-Y plane.\n\n:param translation: The 2D translation.\n                    @see Pose3d(Pose2d)\n                    @see Transform3d(Transform2d)", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation2d"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.meters", "args": [{"name": "translation3d", "type": "wpimath.geometry.Translation3d"}], "tooltip": "Returns the X component of the translation.\n\n:returns: The Z component of the translation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "FUNC": "X"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.meters", "args": [{"name": "translation3d", "type": "wpimath.geometry.Translation3d"}], "tooltip": "Returns the Y component of the translation.\n\n:returns: The Y component of the translation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "FUNC": "Y"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.meters", "args": [{"name": "translation3d", "type": "wpimath.geometry.Translation3d"}], "tooltip": "Returns the Z component of the translation.\n\n:returns: The Z component of the translation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "FUNC": "Z"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.meters", "args": [{"name": "translation3d", "type": "wpimath.geometry.Translation3d"}, {"name": "other", "type": "wpimath.geometry.Translation3d"}], "tooltip": "Calculates the distance between two translations in 3D space.\n\nThe distance between translations is defined as\n\u221a((x\u2082\u2212x\u2081)\u00b2+(y\u2082\u2212y\u2081)\u00b2+(z\u2082\u2212z\u2081)\u00b2).\n\n:param other: The translation to compute the distance to.\n\n:returns: The distance between the two translations.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "FUNC": "distance"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.feet", "args": [{"name": "translation3d", "type": "wpimath.geometry.Translation3d"}, {"name": "arg0", "type": "wpimath.geometry.Translation3d"}], "tooltip": "", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "FUNC": "distanceFeet"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTranslation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "wpimath.geometry.Translation3d", "args": [{"name": "x", "type": "wpimath.units.feet"}, {"name": "y", "type": "wpimath.units.feet"}, {"name": "z", "type": "wpimath.units.feet"}], "tooltip": "", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "FUNC": "fromFeet"}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.meters", "args": [{"name": "translation3d", "type": "wpimath.geometry.Translation3d"}], "tooltip": "Returns the norm, or distance from the origin to the translation.\n\n:returns: The norm of the translation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "FUNC": "norm"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.feet", "args": [{"name": "translation3d", "type": "wpimath.geometry.Translation3d"}], "tooltip": "", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "FUNC": "normFeet"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTranslation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Translation3d", "args": [{"name": "translation3d", "type": "wpimath.geometry.Translation3d"}, {"name": "other", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Applies a rotation to the translation in 3D space.\n\nFor example, rotating a Translation3d of &lt;2, 0, 0&gt; by 90 degrees\naround the Z axis will return a Translation3d of &lt;0, 2, 0&gt;.\n\n:param other: The rotation to rotate the translation by.\n\n:returns: The new rotated translation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "FUNC": "rotateBy"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myTranslation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Translation2d", "args": [{"name": "translation3d", "type": "wpimath.geometry.Translation3d"}], "tooltip": "Returns a Translation2d representing this Translation3d projected into the\nX-Y plane.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "FUNC": "toTranslation2d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "numpy.ndarray[numpy.float64[3, 1]]", "args": [{"name": "translation3d", "type": "wpimath.geometry.Translation3d"}], "tooltip": "Returns a 3D translation vector representation of this translation.\n\n:returns: A 3D translation vector representation of this translation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Translation3d", "FUNC": "toVector"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myTranslation3d"}}}}}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "Translation3d",
    contents: contents,
    className: "wpimath.geometry.Translation3d",
  };

  return category;
}
