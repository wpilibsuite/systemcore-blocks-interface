// This file was generated. Do not edit!

import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpilib.simulation.AnalogTriggerSim

export function initialize() {
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 13 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpilib.simulation.AnalogTriggerSim", "args": [{"name": "analogTrigger", "type": "wpilib.AnalogTrigger"}], "tooltip": "Constructs from an AnalogTrigger object.\n\n:param analogTrigger: AnalogTrigger to simulate", "importModule": "wpilib.simulation"}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogTrigger"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "wpilib.simulation.AnalogTriggerSim", "args": [{"name": "channel", "type": "int"}], "tooltip": "Creates an AnalogTriggerSim for an analog input channel.\n\n:param channel: analog input channel\n\n:returns: Simulated object\n          @throws std::out_of_range if no AnalogTrigger is configured for that\n          channel", "importModule": "wpilib.simulation"}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim", "FUNC": "createForChannel"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "wpilib.simulation.AnalogTriggerSim", "args": [{"name": "index", "type": "int"}], "tooltip": "Creates an AnalogTriggerSim for a simulated index.\nThe index is incremented for each simulated AnalogTrigger.\n\n:param index: simulator index\n\n:returns: Simulated object", "importModule": "wpilib.simulation"}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim", "FUNC": "createForIndex"}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "analogTriggerSim", "type": "wpilib.simulation.AnalogTriggerSim"}], "tooltip": "Check if this analog trigger has been initialized.\n\n:returns: true if initialized", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim", "FUNC": "getInitialized"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "float", "args": [{"name": "analogTriggerSim", "type": "wpilib.simulation.AnalogTriggerSim"}], "tooltip": "Get the lower bound.\n\n:returns: the lower bound", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim", "FUNC": "getTriggerLowerBound"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "float", "args": [{"name": "analogTriggerSim", "type": "wpilib.simulation.AnalogTriggerSim"}], "tooltip": "Get the upper bound.\n\n:returns: the upper bound", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim", "FUNC": "getTriggerUpperBound"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "analogTriggerSim", "type": "wpilib.simulation.AnalogTriggerSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback on whether the analog trigger is initialized.\n\n:param callback:      the callback that will be called whenever the analog\n                      trigger is initialized\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim", "FUNC": "registerInitializedCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "analogTriggerSim", "type": "wpilib.simulation.AnalogTriggerSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback on the lower bound.\n\n:param callback:      the callback that will be called whenever the lower bound\n                      is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim", "FUNC": "registerTriggerLowerBoundCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "analogTriggerSim", "type": "wpilib.simulation.AnalogTriggerSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback on the upper bound.\n\n:param callback:      the callback that will be called whenever the upper bound\n                      is changed\n:param initialNotify: if true, the callback will be run on the initial value\n\n:returns: the CallbackStore object associated with this callback", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim", "FUNC": "registerTriggerUpperBoundCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "analogTriggerSim", "type": "wpilib.simulation.AnalogTriggerSim"}], "tooltip": "Reset all simulation data for this object.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim", "FUNC": "resetData"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "analogTriggerSim", "type": "wpilib.simulation.AnalogTriggerSim"}, {"name": "initialized", "type": "bool"}], "tooltip": "Change whether this analog trigger has been initialized.\n\n:param initialized: the new value", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim", "FUNC": "setInitialized"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "analogTriggerSim", "type": "wpilib.simulation.AnalogTriggerSim"}, {"name": "triggerLowerBound", "type": "float"}], "tooltip": "Change the lower bound.\n\n:param triggerLowerBound: the new lower bound", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim", "FUNC": "setTriggerLowerBound"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "analogTriggerSim", "type": "wpilib.simulation.AnalogTriggerSim"}, {"name": "triggerUpperBound", "type": "float"}], "tooltip": "Change the upper bound.\n\n:param triggerUpperBound: the new upper bound", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.AnalogTriggerSim", "FUNC": "setTriggerUpperBound"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myAnalogTriggerSim"}}}}}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "AnalogTriggerSim",
    contents: contents,
    className: "wpilib.simulation.AnalogTriggerSim",
  };

  return category;
}
