// This file was generated. Do not edit!

import * as pythonEnum from "../mrc_get_python_enum_value";
import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpilib.Relay

export function initialize() {
  pythonEnum.initializeEnum("wpilib.Relay.Direction", ["kBothDirections", "kForwardOnly", "kReverseOnly"], "The Direction(s) that a relay is configured to operate in.\n\nMembers:\n\n  kBothDirections : Both directions are valid.\n\n  kForwardOnly : Only forward is valid.\n\n  kReverseOnly : Only reverse is valid.");
  pythonEnum.initializeEnum("wpilib.Relay.Value", ["kForward", "kOff", "kOn", "kReverse"], "The state to drive a Relay to.\n\nMembers:\n\n  kOff : Off.\n\n  kOn : On.\n\n  kForward : Forward.\n\n  kReverse : Reverse.");
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 22 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRelay"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpilib.Relay", "args": [{"name": "channel", "type": "int"}, {"name": "direction", "type": "wpilib.Relay.Direction"}], "tooltip": "Relay constructor given a channel.\n\nThis code initializes the relay and reserves all resources that need to be\nlocked. Initially the relay is set to both lines at 0v.\n\n:param channel:   The channel number (0-3).\n:param direction: The direction that the Relay object will control.", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.Relay"}, "inputs": {"ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myDirection"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}], "tooltip": "Check if this motor has exceeded its timeout.\n\nThis method is called periodically to determine if this motor has exceeded\nits timeout value. If it has, the stop method is called, and the motor is\nshut down until its value is updated again.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "check"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "None", "args": [], "tooltip": "Check the motors to see if any have timed out.\n\nThis static method is called periodically to poll all the motors and stop\nany that have timed out.", "importModule": "wpilib"}, "fields": {"MODULE_OR_CLASS": "wpilib.Relay", "FUNC": "checkMotors"}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}], "tooltip": "Feed the motor safety object.\n\nResets the timer on this object that is used to do the timeouts.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "feed"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myValue"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.Relay.Value", "args": [{"name": "relay", "type": "wpilib.Relay"}], "tooltip": "Get the Relay State\n\nGets the current state of the relay.\n\nWhen set to kForwardOnly or kReverseOnly, value is returned as kOn/kOff not\nkForward/kReverse (per the recommendation in Set).\n\n:returns: The current state of the relay as a Relay::Value", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.Relay", "FUNC": "get"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRelay"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "int", "args": [{"name": "relay", "type": "wpilib.Relay"}], "tooltip": "", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.Relay", "FUNC": "getChannel"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRelay"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "str", "args": [{"name": "relay", "type": "wpilib.Relay"}], "tooltip": "", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.Relay", "FUNC": "getDescription"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRelay"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.seconds", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}], "tooltip": "Retrieve the timeout value for the corresponding motor safety object.\n\n:returns: the timeout value.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "getExpiration"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "relay", "type": "wpilib.Relay"}, {"name": "builder", "type": "wpiutil.SendableBuilder"}], "tooltip": "", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.Relay", "FUNC": "initSendable"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRelay"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySendableBuilder"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}], "tooltip": "Determine if the motor is still operating or has timed out.\n\n:returns: true if the motor is still operating normally and hasn't timed out.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "isAlive"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}], "tooltip": "Return the state of the motor safety enabled flag.\n\nReturn if the motor safety is currently enabled for this device.\n\n:returns: True if motor safety is enforced for this device.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "isSafetyEnabled"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "relay", "type": "wpilib.Relay"}, {"name": "value", "type": "wpilib.Relay.Value"}], "tooltip": "Set the relay state.\n\nValid values depend on which directions of the relay are controlled by the\nobject.\n\nWhen set to kBothDirections, the relay can be any of the four states:\n0v-0v, 0v-12v, 12v-0v, 12v-12v\n\nWhen set to kForwardOnly or kReverseOnly, you can specify the constant for\nthe direction or you can simply specify kOff and kOn.  Using only kOff and\nkOn is recommended.\n\n:param value: The state to set the relay.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.Relay", "FUNC": "set"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRelay"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myValue"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}, {"name": "expirationTime", "type": "wpimath.units.seconds"}], "tooltip": "Set the expiration time for the corresponding motor safety object.\n\n:param expirationTime: The timeout value.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "setExpiration"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "motorSafety", "type": "wpilib.MotorSafety"}, {"name": "enabled", "type": "bool"}], "tooltip": "Enable/disable motor safety for this device.\n\nTurn on and off the motor safety option for this PWM object.\n\n:param enabled: True if motor safety is enforced for this object.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.MotorSafety", "FUNC": "setSafetyEnabled"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myMotorSafety"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "relay", "type": "wpilib.Relay"}], "tooltip": "", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.Relay", "FUNC": "stopMotor"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRelay"}}}}}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.Relay.Direction", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.Relay.Direction", "ENUM_VALUE": "kBothDirections"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.Relay.Direction", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.Relay.Direction", "ENUM_VALUE": "kForwardOnly"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.Relay.Direction", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.Relay.Direction", "ENUM_VALUE": "kReverseOnly"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.Relay.Value", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.Relay.Value", "ENUM_VALUE": "kForward"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.Relay.Value", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.Relay.Value", "ENUM_VALUE": "kOff"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.Relay.Value", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.Relay.Value", "ENUM_VALUE": "kOn"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "wpilib.Relay.Value", "importModule": "wpilib"}, "fields": {"ENUM_TYPE": "wpilib.Relay.Value", "ENUM_VALUE": "kReverse"}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "Relay",
    contents: contents,
    className: "wpilib.Relay",
  };

  return category;
}
