// This file was generated. Do not edit!

import * as getPythonVariable from "../mrc_get_python_variable";
import * as pythonEnum from "../mrc_get_python_enum_value";
import * as toolboxItems from "../../toolbox/items";

// Blocks for class hal.SimDevice

export function initialize() {
  getPythonVariable.initializeInstanceVariableGetter("hal.SimDevice", "str", ["name"], [""]);
  pythonEnum.initializeEnum("hal.SimDevice.Direction", ["kBidir", "kInput", "kOutput"], "Direction of a simulated value (from the perspective of user code).\n\nMembers:\n\n  kInput\n\n  kOutput\n\n  kBidir");
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 14 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "hal.SimDevice", "varType": "str", "importModule": "", "selfLabel": "simDevice", "selfType": "hal.SimDevice"}, "fields": {"MODULE_OR_CLASS": "hal.SimDevice", "VAR": "name"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimDevice"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "hal.SimDevice", "args": [{"name": "name", "type": "str"}], "tooltip": "Creates a simulated device.\n\nThe device name must be unique.  Returns null if the device name\nalready exists.  If multiple instances of the same device are desired,\nrecommend appending the instance/unique identifier in brackets to the base\nname, e.g. \"device[1]\".\n\nUsing a device name of the form \"Type:Name\" will create a WebSockets node\nwith a type value of \"Type\" and a device value of \"Name\"\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name: device name", "importModule": "hal"}, "fields": {"MODULE_OR_CLASS": "hal.SimDevice"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimDevice"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "hal.SimDevice", "args": [{"name": "name", "type": "str"}, {"name": "index", "type": "int"}], "tooltip": "Creates a simulated device.\n\nThe device name must be unique.  Returns null if the device name\nalready exists.  This is a convenience method that appends index in\nbrackets to the device name, e.g. passing index=1 results in \"device[1]\"\nfor the device name.\n\nUsing a device name of the form \"Type:Name\" will create a WebSockets node\nwith a type value of \"Type\" and a device value of \"Name\"\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:  device name\n:param index: device index number to append to name", "importModule": "hal"}, "fields": {"MODULE_OR_CLASS": "hal.SimDevice"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimDevice"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "hal.SimDevice", "args": [{"name": "name", "type": "str"}, {"name": "index", "type": "int"}, {"name": "channel", "type": "int"}], "tooltip": "Creates a simulated device.\n\nThe device name must be unique.  Returns null if the device name\nalready exists.  This is a convenience method that appends index and\nchannel in brackets to the device name, e.g. passing index=1 and channel=2\nresults in \"device[1,2]\" for the device name.\n\nUsing a device name of the form \"Type:Name\" will create a WebSockets node\nwith a type value of \"Type\" and a device value of \"Name\"\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:    device name\n:param index:   device index number to append to name\n:param channel: device channel number to append to name", "importModule": "hal"}, "fields": {"MODULE_OR_CLASS": "hal.SimDevice"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimBoolean"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "hal.SimBoolean", "args": [{"name": "simDevice", "type": "hal.SimDevice"}, {"name": "name", "type": "str"}, {"name": "direction", "type": "int"}, {"name": "initialValue", "type": "bool"}], "tooltip": "Creates a boolean value on the simulated device.\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:         value name\n:param direction:    input/output/bidir (from perspective of user code)\n:param initialValue: initial value\n\n:returns: simulated boolean value object", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "hal.SimDevice", "FUNC": "createBoolean"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimDouble"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "hal.SimDouble", "args": [{"name": "simDevice", "type": "hal.SimDevice"}, {"name": "name", "type": "str"}, {"name": "direction", "type": "int"}, {"name": "initialValue", "type": "float"}], "tooltip": "Creates a double value on the simulated device.\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:         value name\n:param direction:    input/output/bidir (from perspective of user code)\n:param initialValue: initial value\n\n:returns: simulated double value object", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "hal.SimDevice", "FUNC": "createDouble"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimEnum"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "hal.SimEnum", "args": [{"name": "simDevice", "type": "hal.SimDevice"}, {"name": "name", "type": "str"}, {"name": "direction", "type": "int"}, {"name": "options", "type": "list[str]"}, {"name": "initialValue", "type": "int"}], "tooltip": "Creates an enumerated value on the simulated device.\n\nEnumerated values are always in the range 0 to numOptions-1.\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:         value name\n:param direction:    input/output/bidir (from perspective of user code)\n:param options:      array of option descriptions\n:param initialValue: initial value (selection)\n\n:returns: simulated enum value object", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "hal.SimDevice", "FUNC": "createEnum"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myList"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimEnum"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "hal.SimEnum", "args": [{"name": "simDevice", "type": "hal.SimDevice"}, {"name": "name", "type": "str"}, {"name": "direction", "type": "int"}, {"name": "options", "type": "list[str]"}, {"name": "optionValues", "type": "list[float]"}, {"name": "initialValue", "type": "int"}], "tooltip": "Creates an enumerated value on the simulated device with double values.\n\nEnumerated values are always in the range 0 to numOptions-1.\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:         value name\n:param direction:    input/output/bidir (from perspective of user code)\n:param options:      array of option descriptions\n:param optionValues: array of option values (must be the same size as\n                     options)\n:param initialValue: initial value (selection)\n\n:returns: simulated enum value object", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "hal.SimDevice", "FUNC": "createEnumDouble"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}, "ARG3": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myList"}}}}, "ARG4": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myList"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimInt"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "hal.SimInt", "args": [{"name": "simDevice", "type": "hal.SimDevice"}, {"name": "name", "type": "str"}, {"name": "direction", "type": "int"}, {"name": "initialValue", "type": "int"}], "tooltip": "Creates an int value on the simulated device.\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:         value name\n:param direction:    input/output/bidir (from perspective of user code)\n:param initialValue: initial value\n\n:returns: simulated double value object", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "hal.SimDevice", "FUNC": "createInt"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySimLong"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "hal.SimLong", "args": [{"name": "simDevice", "type": "hal.SimDevice"}, {"name": "name", "type": "str"}, {"name": "direction", "type": "int"}, {"name": "initialValue", "type": "int"}], "tooltip": "Creates a long value on the simulated device.\n\nIf not in simulation, results in an \"empty\" object that evaluates to false\nin a boolean context.\n\n:param name:         value name\n:param direction:    input/output/bidir (from perspective of user code)\n:param initialValue: initial value\n\n:returns: simulated double value object", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "hal.SimDevice", "FUNC": "createLong"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "str", "args": [{"name": "simDevice", "type": "hal.SimDevice"}], "tooltip": "Get the name of the simulated device.\n\n:returns: name", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "hal.SimDevice", "FUNC": "getName"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySimDevice"}}}}}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "hal.SimDevice.Direction", "importModule": "hal"}, "fields": {"ENUM_TYPE": "hal.SimDevice.Direction", "ENUM_VALUE": "kBidir"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "hal.SimDevice.Direction", "importModule": "hal"}, "fields": {"ENUM_TYPE": "hal.SimDevice.Direction", "ENUM_VALUE": "kInput"}},
    {"kind": "block", "type": "mrc_get_python_enum_value", "extraState": {"enumType": "hal.SimDevice.Direction", "importModule": "hal"}, "fields": {"ENUM_TYPE": "hal.SimDevice.Direction", "ENUM_VALUE": "kOutput"}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "SimDevice",
    contents: contents,
    className: "hal.SimDevice",
  };

  return category;
}
