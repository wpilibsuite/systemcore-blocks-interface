// This file was generated. Do not edit!

import * as getPythonVariable from "../mrc_get_python_variable";
import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpimath.geometry.Rotation3d

export function initialize() {
  getPythonVariable.initializeInstanceVariableGetter("wpimath.geometry.Rotation3d", "wpimath.units.radians", ["angle", "x", "y", "z"], ["", "", "", ""]);
  getPythonVariable.initializeInstanceVariableGetter("wpimath.geometry.Rotation3d", "wpimath.units.degrees", ["angle_degrees", "x_degrees", "y_degrees", "z_degrees"], ["", "", "", ""]);
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 26 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Rotation3d", "varType": "wpimath.units.radians", "importModule": "", "selfLabel": "rotation3d", "selfType": "wpimath.geometry.Rotation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "VAR": "angle"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Rotation3d", "varType": "wpimath.units.radians", "importModule": "", "selfLabel": "rotation3d", "selfType": "wpimath.geometry.Rotation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "VAR": "x"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Rotation3d", "varType": "wpimath.units.radians", "importModule": "", "selfLabel": "rotation3d", "selfType": "wpimath.geometry.Rotation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "VAR": "y"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Rotation3d", "varType": "wpimath.units.radians", "importModule": "", "selfLabel": "rotation3d", "selfType": "wpimath.geometry.Rotation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "VAR": "z"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Rotation3d", "varType": "wpimath.units.degrees", "importModule": "", "selfLabel": "rotation3d", "selfType": "wpimath.geometry.Rotation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "VAR": "angle_degrees"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Rotation3d", "varType": "wpimath.units.degrees", "importModule": "", "selfLabel": "rotation3d", "selfType": "wpimath.geometry.Rotation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "VAR": "x_degrees"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Rotation3d", "varType": "wpimath.units.degrees", "importModule": "", "selfLabel": "rotation3d", "selfType": "wpimath.geometry.Rotation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "VAR": "y_degrees"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "mrc_get_python_variable", "extraState": {"varKind": "instance", "moduleOrClassName": "wpimath.geometry.Rotation3d", "varType": "wpimath.units.degrees", "importModule": "", "selfLabel": "rotation3d", "selfType": "wpimath.geometry.Rotation3d"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "VAR": "z_degrees"}, "inputs": {"SELF": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Rotation3d", "args": [], "tooltip": "Constructs a Rotation3d representing no rotation.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Rotation3d", "args": [{"name": "q", "type": "wpimath.geometry.Quaternion"}], "tooltip": "Constructs a Rotation3d from a quaternion.\n\n:param q: The quaternion.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myQuaternion"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Rotation3d", "args": [{"name": "roll", "type": "wpimath.units.radians"}, {"name": "pitch", "type": "wpimath.units.radians"}, {"name": "yaw", "type": "wpimath.units.radians"}], "tooltip": "Constructs a Rotation3d from extrinsic roll, pitch, and yaw.\n\nExtrinsic rotations occur in that order around the axes in the fixed global\nframe rather than the body frame.\n\nAngles are measured counterclockwise with the rotation axis pointing \"out\nof the page\". If you point your right thumb along the positive axis\ndirection, your fingers curl in the direction of positive rotation.\n\n:param roll:  The counterclockwise rotation angle around the X axis (roll).\n:param pitch: The counterclockwise rotation angle around the Y axis (pitch).\n:param yaw:   The counterclockwise rotation angle around the Z axis (yaw).", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Rotation3d", "args": [{"name": "axis", "type": "numpy.ndarray[numpy.float64[3, 1]]"}, {"name": "angle", "type": "wpimath.units.radians"}], "tooltip": "Constructs a Rotation3d with the given axis-angle representation. The axis\ndoesn't have to be normalized.\n\n:param axis:  The rotation axis.\n:param angle: The rotation around the axis.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Rotation3d", "args": [{"name": "rvec", "type": "numpy.ndarray[numpy.float64[3, 1]]"}], "tooltip": "Constructs a Rotation3d with the given rotation vector representation. This\nrepresentation is equivalent to axis-angle, where the normalized axis is\nmultiplied by the rotation around the axis in radians.\n\n:param rvec: The rotation vector.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Rotation3d", "args": [{"name": "rotationMatrix", "type": "numpy.ndarray[numpy.float64[3, 3]]"}], "tooltip": "Constructs a Rotation3d from a rotation matrix.\n\n:param rotationMatrix: The rotation matrix.\n                       @throws std::domain_error if the rotation matrix isn't special orthogonal.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Rotation3d", "args": [{"name": "initial", "type": "numpy.ndarray[numpy.float64[3, 1]]"}, {"name": "final", "type": "numpy.ndarray[numpy.float64[3, 1]]"}], "tooltip": "Constructs a Rotation3d that rotates the initial vector onto the final\nvector.\n\nThis is useful for turning a 3D vector (final) into an orientation relative\nto a coordinate system vector (initial).\n\n:param initial: The initial vector.\n:param final:   The final vector.", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpimath.geometry.Rotation3d", "args": [{"name": "rotation", "type": "wpimath.geometry.Rotation2d"}], "tooltip": "Constructs a 3D rotation from a 2D rotation in the X-Y plane.\n\n:param rotation: The 2D rotation.\n                 @see Pose3d(Pose2d)\n                 @see Transform3d(Transform2d)", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation2d"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.radians", "args": [{"name": "rotation3d", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Returns the counterclockwise rotation angle around the X axis (roll).", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "FUNC": "X"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.radians", "args": [{"name": "rotation3d", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Returns the counterclockwise rotation angle around the Y axis (pitch).", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "FUNC": "Y"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.units.radians", "args": [{"name": "rotation3d", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Returns the counterclockwise rotation angle around the Z axis (yaw).", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "FUNC": "Z"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "numpy.ndarray[numpy.float64[3, 1]]", "args": [{"name": "rotation3d", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Returns the axis in the axis-angle representation of this rotation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "FUNC": "axis"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "static", "returnType": "wpimath.geometry.Rotation3d", "args": [{"name": "roll", "type": "wpimath.units.degrees"}, {"name": "pitch", "type": "wpimath.units.degrees"}, {"name": "yaw", "type": "wpimath.units.degrees"}], "tooltip": "", "importModule": "wpimath.geometry"}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "FUNC": "fromDegrees"}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myQuaternion"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Quaternion", "args": [{"name": "rotation3d", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Returns the quaternion representation of the Rotation3d.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "FUNC": "getQuaternion"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation3d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Rotation3d", "args": [{"name": "rotation3d", "type": "wpimath.geometry.Rotation3d"}, {"name": "other", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Adds the new rotation to the current rotation. The other rotation is\napplied extrinsically, which means that it rotates around the global axes.\nFor example, Rotation3d{90_deg, 0, 0}.RotateBy(Rotation3d{0, 45_deg, 0})\nrotates by 90 degrees around the +X axis and then by 45 degrees around the\nglobal +Y axis. (This is equivalent to Rotation3d{90_deg, 45_deg, 0})\n\n:param other: The extrinsic rotation to rotate by.\n\n:returns: The new rotated Rotation3d.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "FUNC": "rotateBy"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "numpy.ndarray[numpy.float64[3, 3]]", "args": [{"name": "rotation3d", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Returns rotation matrix representation of this rotation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "FUNC": "toMatrix"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myRotation2d"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpimath.geometry.Rotation2d", "args": [{"name": "rotation3d", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Returns a Rotation2d representing this Rotation3d projected into the X-Y\nplane.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "FUNC": "toRotation2d"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "numpy.ndarray[numpy.float64[3, 1]]", "args": [{"name": "rotation3d", "type": "wpimath.geometry.Rotation3d"}], "tooltip": "Returns rotation vector representation of this rotation.\n\n:returns: Rotation vector representation of this rotation.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpimath.geometry.Rotation3d", "FUNC": "toVector"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myRotation3d"}}}}}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "Rotation3d",
    contents: contents,
    className: "wpimath.geometry.Rotation3d",
  };

  return category;
}
