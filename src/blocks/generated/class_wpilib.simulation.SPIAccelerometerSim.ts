// This file was generated. Do not edit!

import * as toolboxItems from "../../toolbox/items";

// Blocks for class wpilib.simulation.SPIAccelerometerSim

export function initialize() {
}

export function getToolboxCategory(subcategories: toolboxItems.Category[] = []): toolboxItems.Category {

  // There are 17 blocks.
  const contents: toolboxItems.ContentsType[] = [
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "constructor", "returnType": "wpilib.simulation.SPIAccelerometerSim", "args": [{"name": "index", "type": "int"}], "tooltip": "Construct a new simulation object.\n\n:param index: the HAL index of the accelerometer", "importModule": "wpilib.simulation"}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim"}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "bool", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}], "tooltip": "Check whether the accelerometer is active.\n\n:returns: true if active", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "getActive"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "int", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}], "tooltip": "Check the range of this accelerometer.\n\n:returns: the accelerometer range", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "getRange"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "float", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}], "tooltip": "Measure the X axis value.\n\n:returns: the X axis measurement", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "getX"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "float", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}], "tooltip": "Measure the Y axis value.\n\n:returns: the Y axis measurement", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "getY"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "float", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}], "tooltip": "Measure the Z axis value.\n\n:returns: the Z axis measurement", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "getZ"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback to be run when this accelerometer activates.\n\n:param callback:      the callback\n:param initialNotify: whether to run the callback with the initial state\n\n:returns: the CallbackStore object associated with this callback", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "registerActiveCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback to be run whenever the range changes.\n\n:param callback:      the callback\n:param initialNotify: whether to call the callback with the initial state\n\n:returns: the CallbackStore object associated with this callback", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "registerRangeCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback to be run whenever the X axis value changes.\n\n:param callback:      the callback\n:param initialNotify: whether to call the callback with the initial state\n\n:returns: the CallbackStore object associated with this callback", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "registerXCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback to be run whenever the Y axis value changes.\n\n:param callback:      the callback\n:param initialNotify: whether to call the callback with the initial state\n\n:returns: the CallbackStore object associated with this callback", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "registerYCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "variables_set", "fields": {"VAR": {"name": "myCallbackStore"}}, "inputs": {"VALUE": {"block": {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "wpilib.simulation.CallbackStore", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}, {"name": "callback", "type": "Callable[[str, hal._wpiHal.Value], None]"}, {"name": "initialNotify", "type": "bool"}], "tooltip": "Register a callback to be run whenever the Z axis value changes.\n\n:param callback:      the callback\n:param initialNotify: whether to call the callback with the initial state\n\n:returns: the CallbackStore object associated with this callback", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "registerZCallback"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}, "ARG1": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "myCallable"}}}}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}], "tooltip": "Reset all simulation data of this object.", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "resetData"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}, {"name": "active", "type": "bool"}], "tooltip": "Define whether this accelerometer is active.\n\n:param active: the new state", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "setActive"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}, {"name": "range", "type": "int"}], "tooltip": "Change the range of this accelerometer.\n\n:param range: the new accelerometer range", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "setRange"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}, {"name": "x", "type": "float"}], "tooltip": "Change the X axis value of the accelerometer.\n\n:param x: the new reading of the X axis", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "setX"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}, {"name": "y", "type": "float"}], "tooltip": "Change the Y axis value of the accelerometer.\n\n:param y: the new reading of the Y axis", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "setY"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}}},
    {"kind": "block", "type": "mrc_call_python_function", "extraState": {"functionKind": "instance", "returnType": "None", "args": [{"name": "sPIAccelerometerSim", "type": "wpilib.simulation.SPIAccelerometerSim"}, {"name": "z", "type": "float"}], "tooltip": "Change the Z axis value of the accelerometer.\n\n:param z: the new reading of the Z axis", "importModule": ""}, "fields": {"MODULE_OR_CLASS": "wpilib.simulation.SPIAccelerometerSim", "FUNC": "setZ"}, "inputs": {"ARG0": {"block": {"type": "variables_get", "fields": {"VAR": {"name": "mySPIAccelerometerSim"}}}}}},
  ];

  contents.push(...subcategories);

  const category: toolboxItems.PythonClassCategory = {
    kind: "category",
    name:  "SPIAccelerometerSim",
    contents: contents,
    className: "wpilib.simulation.SPIAccelerometerSim",
  };

  return category;
}
